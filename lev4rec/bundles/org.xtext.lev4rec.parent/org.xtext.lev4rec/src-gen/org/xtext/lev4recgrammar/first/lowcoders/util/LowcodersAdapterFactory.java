/**
 * generated by Xtext 2.23.0
 */
package org.xtext.lev4recgrammar.first.lowcoders.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import org.xtext.lev4recgrammar.first.lowcoders.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see org.xtext.lev4recgrammar.first.lowcoders.LowcodersPackage
 * @generated
 */
public class LowcodersAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static LowcodersPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LowcodersAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = LowcodersPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LowcodersSwitch<Adapter> modelSwitch =
    new LowcodersSwitch<Adapter>()
    {
      @Override
      public Adapter caseRSModel(RSModel object)
      {
        return createRSModelAdapter();
      }
      @Override
      public Adapter caseDataset(Dataset object)
      {
        return createDatasetAdapter();
      }
      @Override
      public Adapter casePresentationLayer(PresentationLayer object)
      {
        return createPresentationLayerAdapter();
      }
      @Override
      public Adapter caseRecommendationSystem(RecommendationSystem object)
      {
        return createRecommendationSystemAdapter();
      }
      @Override
      public Adapter caseValidationTechnique(ValidationTechnique object)
      {
        return createValidationTechniqueAdapter();
      }
      @Override
      public Adapter caseFeedback(Feedback object)
      {
        return createFeedbackAdapter();
      }
      @Override
      public Adapter caseDataSource(DataSource object)
      {
        return createDataSourceAdapter();
      }
      @Override
      public Adapter caseDataStructure(DataStructure object)
      {
        return createDataStructureAdapter();
      }
      @Override
      public Adapter caseRecommendationHandler(RecommendationHandler object)
      {
        return createRecommendationHandlerAdapter();
      }
      @Override
      public Adapter caseEvaluation(Evaluation object)
      {
        return createEvaluationAdapter();
      }
      @Override
      public Adapter caseFeedbackComponent(FeedbackComponent object)
      {
        return createFeedbackComponentAdapter();
      }
      @Override
      public Adapter caseVariable(Variable object)
      {
        return createVariableAdapter();
      }
      @Override
      public Adapter caseUnsupervisedDataset(UnsupervisedDataset object)
      {
        return createUnsupervisedDatasetAdapter();
      }
      @Override
      public Adapter caseSupervisedDataset(SupervisedDataset object)
      {
        return createSupervisedDatasetAdapter();
      }
      @Override
      public Adapter casePreprocessing(Preprocessing object)
      {
        return createPreprocessingAdapter();
      }
      @Override
      public Adapter caseCodeRepository(CodeRepository object)
      {
        return createCodeRepositoryAdapter();
      }
      @Override
      public Adapter caseCommunicationChannel(CommunicationChannel object)
      {
        return createCommunicationChannelAdapter();
      }
      @Override
      public Adapter caseBugTrackingSystem(BugTrackingSystem object)
      {
        return createBugTrackingSystemAdapter();
      }
      @Override
      public Adapter caseDependencyManager(DependencyManager object)
      {
        return createDependencyManagerAdapter();
      }
      @Override
      public Adapter caseFile(File object)
      {
        return createFileAdapter();
      }
      @Override
      public Adapter caseGraph(Graph object)
      {
        return createGraphAdapter();
      }
      @Override
      public Adapter caseMatrix(Matrix object)
      {
        return createMatrixAdapter();
      }
      @Override
      public Adapter caseTree(Tree object)
      {
        return createTreeAdapter();
      }
      @Override
      public Adapter caseTextualContent(TextualContent object)
      {
        return createTextualContentAdapter();
      }
      @Override
      public Adapter caseARFF(ARFF object)
      {
        return createARFFAdapter();
      }
      @Override
      public Adapter caseVariableRelation(VariableRelation object)
      {
        return createVariableRelationAdapter();
      }
      @Override
      public Adapter caseRecommendedItem(RecommendedItem object)
      {
        return createRecommendedItemAdapter();
      }
      @Override
      public Adapter caseWebIService(WebIService object)
      {
        return createWebIServiceAdapter();
      }
      @Override
      public Adapter caseWebApplication(WebApplication object)
      {
        return createWebApplicationAdapter();
      }
      @Override
      public Adapter caseIDEIntegration(IDEIntegration object)
      {
        return createIDEIntegrationAdapter();
      }
      @Override
      public Adapter caseJupyterNotebook(JupyterNotebook object)
      {
        return createJupyterNotebookAdapter();
      }
      @Override
      public Adapter caseVSCodePlugin(VSCodePlugin object)
      {
        return createVSCodePluginAdapter();
      }
      @Override
      public Adapter caseTraversableGraph(TraversableGraph object)
      {
        return createTraversableGraphAdapter();
      }
      @Override
      public Adapter caseRawOutcomes(RawOutcomes object)
      {
        return createRawOutcomesAdapter();
      }
      @Override
      public Adapter caseRecommendationUsage(RecommendationUsage object)
      {
        return createRecommendationUsageAdapter();
      }
      @Override
      public Adapter caseRecommendationContext(RecommendationContext object)
      {
        return createRecommendationContextAdapter();
      }
      @Override
      public Adapter caseProactiveHandler(ProactiveHandler object)
      {
        return createProactiveHandlerAdapter();
      }
      @Override
      public Adapter caseReactiveHandler(ReactiveHandler object)
      {
        return createReactiveHandlerAdapter();
      }
      @Override
      public Adapter caseGUIElement(GUIElement object)
      {
        return createGUIElementAdapter();
      }
      @Override
      public Adapter caseUserEvent(UserEvent object)
      {
        return createUserEventAdapter();
      }
      @Override
      public Adapter caseUserStudy(UserStudy object)
      {
        return createUserStudyAdapter();
      }
      @Override
      public Adapter caseCrossValidation(CrossValidation object)
      {
        return createCrossValidationAdapter();
      }
      @Override
      public Adapter caseContextValidation(ContextValidation object)
      {
        return createContextValidationAdapter();
      }
      @Override
      public Adapter caseRandomSplitting(RandomSplitting object)
      {
        return createRandomSplittingAdapter();
      }
      @Override
      public Adapter caseAutomatedValidation(AutomatedValidation object)
      {
        return createAutomatedValidationAdapter();
      }
      @Override
      public Adapter caseGroundTruthExtraction(GroundTruthExtraction object)
      {
        return createGroundTruthExtractionAdapter();
      }
      @Override
      public Adapter caseRecommendationSetting(RecommendationSetting object)
      {
        return createRecommendationSettingAdapter();
      }
      @Override
      public Adapter caseMachineLearningBasedRS(MachineLearningBasedRS object)
      {
        return createMachineLearningBasedRSAdapter();
      }
      @Override
      public Adapter caseFilteringRS(FilteringRS object)
      {
        return createFilteringRSAdapter();
      }
      @Override
      public Adapter caseDataMiningRS(DataMiningRS object)
      {
        return createDataMiningRSAdapter();
      }
      @Override
      public Adapter caseCustomRecommender(CustomRecommender object)
      {
        return createCustomRecommenderAdapter();
      }
      @Override
      public Adapter caseGeneticAlgorithm(GeneticAlgorithm object)
      {
        return createGeneticAlgorithmAdapter();
      }
      @Override
      public Adapter caseDeepNN(DeepNN object)
      {
        return createDeepNNAdapter();
      }
      @Override
      public Adapter caseConvolutionalNN(ConvolutionalNN object)
      {
        return createConvolutionalNNAdapter();
      }
      @Override
      public Adapter caseBayesian(Bayesian object)
      {
        return createBayesianAdapter();
      }
      @Override
      public Adapter caseRecurrentNN(RecurrentNN object)
      {
        return createRecurrentNNAdapter();
      }
      @Override
      public Adapter caseSVM(SVM object)
      {
        return createSVMAdapter();
      }
      @Override
      public Adapter caseDecisionTree(DecisionTree object)
      {
        return createDecisionTreeAdapter();
      }
      @Override
      public Adapter caseFeedForwardNN(FeedForwardNN object)
      {
        return createFeedForwardNNAdapter();
      }
      @Override
      public Adapter caseImplicitFeedback(ImplicitFeedback object)
      {
        return createImplicitFeedbackAdapter();
      }
      @Override
      public Adapter caseHybridFeedback(HybridFeedback object)
      {
        return createHybridFeedbackAdapter();
      }
      @Override
      public Adapter caseAdditiveFeedback(AdditiveFeedback object)
      {
        return createAdditiveFeedbackAdapter();
      }
      @Override
      public Adapter caseRating(Rating object)
      {
        return createRatingAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.RSModel <em>RS Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.RSModel
   * @generated
   */
  public Adapter createRSModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.Dataset <em>Dataset</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.Dataset
   * @generated
   */
  public Adapter createDatasetAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.PresentationLayer <em>Presentation Layer</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.PresentationLayer
   * @generated
   */
  public Adapter createPresentationLayerAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.RecommendationSystem <em>Recommendation System</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.RecommendationSystem
   * @generated
   */
  public Adapter createRecommendationSystemAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.ValidationTechnique <em>Validation Technique</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.ValidationTechnique
   * @generated
   */
  public Adapter createValidationTechniqueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.Feedback <em>Feedback</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.Feedback
   * @generated
   */
  public Adapter createFeedbackAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.DataSource <em>Data Source</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.DataSource
   * @generated
   */
  public Adapter createDataSourceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.DataStructure <em>Data Structure</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.DataStructure
   * @generated
   */
  public Adapter createDataStructureAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.RecommendationHandler <em>Recommendation Handler</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.RecommendationHandler
   * @generated
   */
  public Adapter createRecommendationHandlerAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.Evaluation <em>Evaluation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.Evaluation
   * @generated
   */
  public Adapter createEvaluationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.FeedbackComponent <em>Feedback Component</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.FeedbackComponent
   * @generated
   */
  public Adapter createFeedbackComponentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.Variable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.Variable
   * @generated
   */
  public Adapter createVariableAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.UnsupervisedDataset <em>Unsupervised Dataset</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.UnsupervisedDataset
   * @generated
   */
  public Adapter createUnsupervisedDatasetAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.SupervisedDataset <em>Supervised Dataset</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.SupervisedDataset
   * @generated
   */
  public Adapter createSupervisedDatasetAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.Preprocessing <em>Preprocessing</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.Preprocessing
   * @generated
   */
  public Adapter createPreprocessingAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.CodeRepository <em>Code Repository</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.CodeRepository
   * @generated
   */
  public Adapter createCodeRepositoryAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.CommunicationChannel <em>Communication Channel</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.CommunicationChannel
   * @generated
   */
  public Adapter createCommunicationChannelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.BugTrackingSystem <em>Bug Tracking System</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.BugTrackingSystem
   * @generated
   */
  public Adapter createBugTrackingSystemAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.DependencyManager <em>Dependency Manager</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.DependencyManager
   * @generated
   */
  public Adapter createDependencyManagerAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.File <em>File</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.File
   * @generated
   */
  public Adapter createFileAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.Graph <em>Graph</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.Graph
   * @generated
   */
  public Adapter createGraphAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.Matrix <em>Matrix</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.Matrix
   * @generated
   */
  public Adapter createMatrixAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.Tree <em>Tree</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.Tree
   * @generated
   */
  public Adapter createTreeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.TextualContent <em>Textual Content</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.TextualContent
   * @generated
   */
  public Adapter createTextualContentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.ARFF <em>ARFF</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.ARFF
   * @generated
   */
  public Adapter createARFFAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.VariableRelation <em>Variable Relation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.VariableRelation
   * @generated
   */
  public Adapter createVariableRelationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.RecommendedItem <em>Recommended Item</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.RecommendedItem
   * @generated
   */
  public Adapter createRecommendedItemAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.WebIService <em>Web IService</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.WebIService
   * @generated
   */
  public Adapter createWebIServiceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.WebApplication <em>Web Application</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.WebApplication
   * @generated
   */
  public Adapter createWebApplicationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.IDEIntegration <em>IDE Integration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.IDEIntegration
   * @generated
   */
  public Adapter createIDEIntegrationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.JupyterNotebook <em>Jupyter Notebook</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.JupyterNotebook
   * @generated
   */
  public Adapter createJupyterNotebookAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.VSCodePlugin <em>VS Code Plugin</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.VSCodePlugin
   * @generated
   */
  public Adapter createVSCodePluginAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.TraversableGraph <em>Traversable Graph</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.TraversableGraph
   * @generated
   */
  public Adapter createTraversableGraphAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.RawOutcomes <em>Raw Outcomes</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.RawOutcomes
   * @generated
   */
  public Adapter createRawOutcomesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.RecommendationUsage <em>Recommendation Usage</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.RecommendationUsage
   * @generated
   */
  public Adapter createRecommendationUsageAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.RecommendationContext <em>Recommendation Context</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.RecommendationContext
   * @generated
   */
  public Adapter createRecommendationContextAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.ProactiveHandler <em>Proactive Handler</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.ProactiveHandler
   * @generated
   */
  public Adapter createProactiveHandlerAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.ReactiveHandler <em>Reactive Handler</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.ReactiveHandler
   * @generated
   */
  public Adapter createReactiveHandlerAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.GUIElement <em>GUI Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.GUIElement
   * @generated
   */
  public Adapter createGUIElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.UserEvent <em>User Event</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.UserEvent
   * @generated
   */
  public Adapter createUserEventAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.UserStudy <em>User Study</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.UserStudy
   * @generated
   */
  public Adapter createUserStudyAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.CrossValidation <em>Cross Validation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.CrossValidation
   * @generated
   */
  public Adapter createCrossValidationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.ContextValidation <em>Context Validation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.ContextValidation
   * @generated
   */
  public Adapter createContextValidationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.RandomSplitting <em>Random Splitting</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.RandomSplitting
   * @generated
   */
  public Adapter createRandomSplittingAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.AutomatedValidation <em>Automated Validation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.AutomatedValidation
   * @generated
   */
  public Adapter createAutomatedValidationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.GroundTruthExtraction <em>Ground Truth Extraction</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.GroundTruthExtraction
   * @generated
   */
  public Adapter createGroundTruthExtractionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.RecommendationSetting <em>Recommendation Setting</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.RecommendationSetting
   * @generated
   */
  public Adapter createRecommendationSettingAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.MachineLearningBasedRS <em>Machine Learning Based RS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.MachineLearningBasedRS
   * @generated
   */
  public Adapter createMachineLearningBasedRSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.FilteringRS <em>Filtering RS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.FilteringRS
   * @generated
   */
  public Adapter createFilteringRSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.DataMiningRS <em>Data Mining RS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.DataMiningRS
   * @generated
   */
  public Adapter createDataMiningRSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.CustomRecommender <em>Custom Recommender</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.CustomRecommender
   * @generated
   */
  public Adapter createCustomRecommenderAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.GeneticAlgorithm <em>Genetic Algorithm</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.GeneticAlgorithm
   * @generated
   */
  public Adapter createGeneticAlgorithmAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.DeepNN <em>Deep NN</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.DeepNN
   * @generated
   */
  public Adapter createDeepNNAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.ConvolutionalNN <em>Convolutional NN</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.ConvolutionalNN
   * @generated
   */
  public Adapter createConvolutionalNNAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.Bayesian <em>Bayesian</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.Bayesian
   * @generated
   */
  public Adapter createBayesianAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.RecurrentNN <em>Recurrent NN</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.RecurrentNN
   * @generated
   */
  public Adapter createRecurrentNNAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.SVM <em>SVM</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.SVM
   * @generated
   */
  public Adapter createSVMAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.DecisionTree <em>Decision Tree</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.DecisionTree
   * @generated
   */
  public Adapter createDecisionTreeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.FeedForwardNN <em>Feed Forward NN</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.FeedForwardNN
   * @generated
   */
  public Adapter createFeedForwardNNAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.ImplicitFeedback <em>Implicit Feedback</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.ImplicitFeedback
   * @generated
   */
  public Adapter createImplicitFeedbackAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.HybridFeedback <em>Hybrid Feedback</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.HybridFeedback
   * @generated
   */
  public Adapter createHybridFeedbackAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.AdditiveFeedback <em>Additive Feedback</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.AdditiveFeedback
   * @generated
   */
  public Adapter createAdditiveFeedbackAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.lev4recgrammar.first.lowcoders.Rating <em>Rating</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.lev4recgrammar.first.lowcoders.Rating
   * @generated
   */
  public Adapter createRatingAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //LowcodersAdapterFactory
