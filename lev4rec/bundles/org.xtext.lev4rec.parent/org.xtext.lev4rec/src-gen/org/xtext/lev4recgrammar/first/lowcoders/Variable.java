/**
 * generated by Xtext 2.29.0
 */
package org.xtext.lev4recgrammar.first.lowcoders;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Variable</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.lev4recgrammar.first.lowcoders.Variable#isIsMissingValueAllowed <em>Is Missing Value Allowed</em>}</li>
 *   <li>{@link org.xtext.lev4recgrammar.first.lowcoders.Variable#isIsMultiple <em>Is Multiple</em>}</li>
 *   <li>{@link org.xtext.lev4recgrammar.first.lowcoders.Variable#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.lev4recgrammar.first.lowcoders.Variable#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.lev4recgrammar.first.lowcoders.Variable#getDataSource <em>Data Source</em>}</li>
 *   <li>{@link org.xtext.lev4recgrammar.first.lowcoders.Variable#getPreprocessing <em>Preprocessing</em>}</li>
 * </ul>
 *
 * @see org.xtext.lev4recgrammar.first.lowcoders.LowcodersPackage#getVariable()
 * @model
 * @generated
 */
public interface Variable extends EObject
{
  /**
   * Returns the value of the '<em><b>Is Missing Value Allowed</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Is Missing Value Allowed</em>' attribute.
   * @see #setIsMissingValueAllowed(boolean)
   * @see org.xtext.lev4recgrammar.first.lowcoders.LowcodersPackage#getVariable_IsMissingValueAllowed()
   * @model
   * @generated
   */
  boolean isIsMissingValueAllowed();

  /**
   * Sets the value of the '{@link org.xtext.lev4recgrammar.first.lowcoders.Variable#isIsMissingValueAllowed <em>Is Missing Value Allowed</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Is Missing Value Allowed</em>' attribute.
   * @see #isIsMissingValueAllowed()
   * @generated
   */
  void setIsMissingValueAllowed(boolean value);

  /**
   * Returns the value of the '<em><b>Is Multiple</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Is Multiple</em>' attribute.
   * @see #setIsMultiple(boolean)
   * @see org.xtext.lev4recgrammar.first.lowcoders.LowcodersPackage#getVariable_IsMultiple()
   * @model
   * @generated
   */
  boolean isIsMultiple();

  /**
   * Sets the value of the '{@link org.xtext.lev4recgrammar.first.lowcoders.Variable#isIsMultiple <em>Is Multiple</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Is Multiple</em>' attribute.
   * @see #isIsMultiple()
   * @generated
   */
  void setIsMultiple(boolean value);

  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see org.xtext.lev4recgrammar.first.lowcoders.LowcodersPackage#getVariable_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link org.xtext.lev4recgrammar.first.lowcoders.Variable#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>Type</b></em>' attribute.
   * The literals are from the enumeration {@link org.xtext.lev4recgrammar.first.lowcoders.VariableType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Type</em>' attribute.
   * @see org.xtext.lev4recgrammar.first.lowcoders.VariableType
   * @see #setType(VariableType)
   * @see org.xtext.lev4recgrammar.first.lowcoders.LowcodersPackage#getVariable_Type()
   * @model
   * @generated
   */
  VariableType getType();

  /**
   * Sets the value of the '{@link org.xtext.lev4recgrammar.first.lowcoders.Variable#getType <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Type</em>' attribute.
   * @see org.xtext.lev4recgrammar.first.lowcoders.VariableType
   * @see #getType()
   * @generated
   */
  void setType(VariableType value);

  /**
   * Returns the value of the '<em><b>Data Source</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Data Source</em>' containment reference.
   * @see #setDataSource(DataSource)
   * @see org.xtext.lev4recgrammar.first.lowcoders.LowcodersPackage#getVariable_DataSource()
   * @model containment="true"
   * @generated
   */
  DataSource getDataSource();

  /**
   * Sets the value of the '{@link org.xtext.lev4recgrammar.first.lowcoders.Variable#getDataSource <em>Data Source</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Data Source</em>' containment reference.
   * @see #getDataSource()
   * @generated
   */
  void setDataSource(DataSource value);

  /**
   * Returns the value of the '<em><b>Preprocessing</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Preprocessing</em>' containment reference.
   * @see #setPreprocessing(Preprocessing)
   * @see org.xtext.lev4recgrammar.first.lowcoders.LowcodersPackage#getVariable_Preprocessing()
   * @model containment="true"
   * @generated
   */
  Preprocessing getPreprocessing();

  /**
   * Sets the value of the '{@link org.xtext.lev4recgrammar.first.lowcoders.Variable#getPreprocessing <em>Preprocessing</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Preprocessing</em>' containment reference.
   * @see #getPreprocessing()
   * @generated
   */
  void setPreprocessing(Preprocessing value);

} // Variable
