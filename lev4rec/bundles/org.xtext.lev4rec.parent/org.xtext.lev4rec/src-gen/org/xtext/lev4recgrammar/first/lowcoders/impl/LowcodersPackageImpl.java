/**
 * generated by Xtext 2.23.0
 */
package org.xtext.lev4recgrammar.first.lowcoders.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtext.lev4recgrammar.first.lowcoders.ActivationType;
import org.xtext.lev4recgrammar.first.lowcoders.AdditiveFeedback;
import org.xtext.lev4recgrammar.first.lowcoders.AutomatedValidation;
import org.xtext.lev4recgrammar.first.lowcoders.Bayesian;
import org.xtext.lev4recgrammar.first.lowcoders.BugTrackingSystem;
import org.xtext.lev4recgrammar.first.lowcoders.CodeRepository;
import org.xtext.lev4recgrammar.first.lowcoders.CommunicationChannel;
import org.xtext.lev4recgrammar.first.lowcoders.ContextValidation;
import org.xtext.lev4recgrammar.first.lowcoders.ConvolutionalNN;
import org.xtext.lev4recgrammar.first.lowcoders.CrossValidation;
import org.xtext.lev4recgrammar.first.lowcoders.CustomRecommender;
import org.xtext.lev4recgrammar.first.lowcoders.DataMiningRS;
import org.xtext.lev4recgrammar.first.lowcoders.DataMiningRSAlgorithm;
import org.xtext.lev4recgrammar.first.lowcoders.DataSource;
import org.xtext.lev4recgrammar.first.lowcoders.DataStructure;
import org.xtext.lev4recgrammar.first.lowcoders.Dataset;
import org.xtext.lev4recgrammar.first.lowcoders.DatasetManipulationLibrary;
import org.xtext.lev4recgrammar.first.lowcoders.DecisionTree;
import org.xtext.lev4recgrammar.first.lowcoders.DeepNN;
import org.xtext.lev4recgrammar.first.lowcoders.DependencyManager;
import org.xtext.lev4recgrammar.first.lowcoders.Evaluation;
import org.xtext.lev4recgrammar.first.lowcoders.FeedForwardNN;
import org.xtext.lev4recgrammar.first.lowcoders.Feedback;
import org.xtext.lev4recgrammar.first.lowcoders.FeedbackComponent;
import org.xtext.lev4recgrammar.first.lowcoders.FeedbackLibType;
import org.xtext.lev4recgrammar.first.lowcoders.File;
import org.xtext.lev4recgrammar.first.lowcoders.FilteringRS;
import org.xtext.lev4recgrammar.first.lowcoders.FilteringRSAlgorithm;
import org.xtext.lev4recgrammar.first.lowcoders.GUIElement;
import org.xtext.lev4recgrammar.first.lowcoders.GeneticAlgorithm;
import org.xtext.lev4recgrammar.first.lowcoders.Graph;
import org.xtext.lev4recgrammar.first.lowcoders.GroundTruthExtraction;
import org.xtext.lev4recgrammar.first.lowcoders.HybridFeedback;
import org.xtext.lev4recgrammar.first.lowcoders.IDEIntegration;
import org.xtext.lev4recgrammar.first.lowcoders.ImplicitFeedback;
import org.xtext.lev4recgrammar.first.lowcoders.JupyterNotebook;
import org.xtext.lev4recgrammar.first.lowcoders.KernelType;
import org.xtext.lev4recgrammar.first.lowcoders.LowcodersFactory;
import org.xtext.lev4recgrammar.first.lowcoders.LowcodersPackage;
import org.xtext.lev4recgrammar.first.lowcoders.MachineLearningBasedRS;
import org.xtext.lev4recgrammar.first.lowcoders.Matrix;
import org.xtext.lev4recgrammar.first.lowcoders.Metric;
import org.xtext.lev4recgrammar.first.lowcoders.MutationOperation;
import org.xtext.lev4recgrammar.first.lowcoders.Preprocessing;
import org.xtext.lev4recgrammar.first.lowcoders.PreprocessingTechnique;
import org.xtext.lev4recgrammar.first.lowcoders.PresentationLayer;
import org.xtext.lev4recgrammar.first.lowcoders.ProactiveHandler;
import org.xtext.lev4recgrammar.first.lowcoders.PyLibType;
import org.xtext.lev4recgrammar.first.lowcoders.RSModel;
import org.xtext.lev4recgrammar.first.lowcoders.RandomSplitting;
import org.xtext.lev4recgrammar.first.lowcoders.Rating;
import org.xtext.lev4recgrammar.first.lowcoders.RatingType;
import org.xtext.lev4recgrammar.first.lowcoders.RawFormat;
import org.xtext.lev4recgrammar.first.lowcoders.RawOutcomes;
import org.xtext.lev4recgrammar.first.lowcoders.ReactiveHandler;
import org.xtext.lev4recgrammar.first.lowcoders.RecommendationContext;
import org.xtext.lev4recgrammar.first.lowcoders.RecommendationHandler;
import org.xtext.lev4recgrammar.first.lowcoders.RecommendationSetting;
import org.xtext.lev4recgrammar.first.lowcoders.RecommendationSystem;
import org.xtext.lev4recgrammar.first.lowcoders.RecommendationUsage;
import org.xtext.lev4recgrammar.first.lowcoders.RecommendationUsageType;
import org.xtext.lev4recgrammar.first.lowcoders.RecommendedItem;
import org.xtext.lev4recgrammar.first.lowcoders.RecurrentNN;
import org.xtext.lev4recgrammar.first.lowcoders.SearchStrategy;
import org.xtext.lev4recgrammar.first.lowcoders.SimilarityFunction;
import org.xtext.lev4recgrammar.first.lowcoders.SolverType;
import org.xtext.lev4recgrammar.first.lowcoders.SupervisedDataset;
import org.xtext.lev4recgrammar.first.lowcoders.TextualContent;
import org.xtext.lev4recgrammar.first.lowcoders.TraversableGraph;
import org.xtext.lev4recgrammar.first.lowcoders.Tree;
import org.xtext.lev4recgrammar.first.lowcoders.UnsupervisedDataset;
import org.xtext.lev4recgrammar.first.lowcoders.UserEvent;
import org.xtext.lev4recgrammar.first.lowcoders.UserEventType;
import org.xtext.lev4recgrammar.first.lowcoders.UserStudy;
import org.xtext.lev4recgrammar.first.lowcoders.UserStudyAnalysis;
import org.xtext.lev4recgrammar.first.lowcoders.UserStudyType;
import org.xtext.lev4recgrammar.first.lowcoders.VSCodePlugin;
import org.xtext.lev4recgrammar.first.lowcoders.ValidationLibrary;
import org.xtext.lev4recgrammar.first.lowcoders.ValidationTechnique;
import org.xtext.lev4recgrammar.first.lowcoders.Variable;
import org.xtext.lev4recgrammar.first.lowcoders.VariableRelation;
import org.xtext.lev4recgrammar.first.lowcoders.VariableType;
import org.xtext.lev4recgrammar.first.lowcoders.WebApplication;
import org.xtext.lev4recgrammar.first.lowcoders.WebIService;
import org.xtext.lev4recgrammar.first.lowcoders.WebInterfaceLibrary;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class LowcodersPackageImpl extends EPackageImpl implements LowcodersPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rsModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass datasetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass presentationLayerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass recommendationSystemEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass validationTechniqueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass feedbackEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataSourceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataStructureEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass recommendationHandlerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass evaluationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass feedbackComponentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass variableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass unsupervisedDatasetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass supervisedDatasetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass preprocessingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass codeRepositoryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass communicationChannelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bugTrackingSystemEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dependencyManagerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fileEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass graphEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass matrixEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass treeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass textualContentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass arffEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass variableRelationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass recommendedItemEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass webIServiceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass webApplicationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ideIntegrationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass jupyterNotebookEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass vsCodePluginEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass traversableGraphEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rawOutcomesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass recommendationUsageEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass recommendationContextEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass proactiveHandlerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass reactiveHandlerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass guiElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass userEventEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass userStudyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass crossValidationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass contextValidationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass randomSplittingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass automatedValidationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass groundTruthExtractionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass recommendationSettingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass machineLearningBasedRSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass filteringRSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataMiningRSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass customRecommenderEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass geneticAlgorithmEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass deepNNEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass convolutionalNNEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bayesianEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass recurrentNNEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass svmEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass decisionTreeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass feedForwardNNEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass implicitFeedbackEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass hybridFeedbackEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass additiveFeedbackEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ratingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum preprocessingTechniqueEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum datasetManipulationLibraryEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum variableTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum webInterfaceLibraryEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum recommendationUsageTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum userEventTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum rawFormatEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum metricEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum userStudyTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum userStudyAnalysisEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum validationLibraryEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum pyLibTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum filteringRSAlgorithmEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum similarityFunctionEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum dataMiningRSAlgorithmEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum searchStrategyEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum mutationOperationEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum kernelTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum solverTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum activationTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum feedbackLibTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum ratingTypeEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtext.lev4recgrammar.first.lowcoders.LowcodersPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private LowcodersPackageImpl()
  {
    super(eNS_URI, LowcodersFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link LowcodersPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static LowcodersPackage init()
  {
    if (isInited) return (LowcodersPackage)EPackage.Registry.INSTANCE.getEPackage(LowcodersPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredLowcodersPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    LowcodersPackageImpl theLowcodersPackage = registeredLowcodersPackage instanceof LowcodersPackageImpl ? (LowcodersPackageImpl)registeredLowcodersPackage : new LowcodersPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theLowcodersPackage.createPackageContents();

    // Initialize created meta-data
    theLowcodersPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theLowcodersPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(LowcodersPackage.eNS_URI, theLowcodersPackage);
    return theLowcodersPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRSModel()
  {
    return rsModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRSModel_Name()
  {
    return (EAttribute)rsModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRSModel_Dataset()
  {
    return (EReference)rsModelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRSModel_PresentationLayer()
  {
    return (EReference)rsModelEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRSModel_Evaluation()
  {
    return (EReference)rsModelEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRSModel_RecommendationSystem()
  {
    return (EReference)rsModelEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRSModel_Feedback()
  {
    return (EReference)rsModelEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDataset()
  {
    return datasetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDataset_IsBuiltIn()
  {
    return (EAttribute)datasetEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDataset_Name()
  {
    return (EAttribute)datasetEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDataset_Preprocessing()
  {
    return (EAttribute)datasetEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDataset_DatasetManipulationLibrary()
  {
    return (EAttribute)datasetEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDataset_Path()
  {
    return (EAttribute)datasetEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataset_IndipendentVariables()
  {
    return (EReference)datasetEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataset_DataStructure()
  {
    return (EReference)datasetEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPresentationLayer()
  {
    return presentationLayerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPresentationLayer_Name()
  {
    return (EAttribute)presentationLayerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPresentationLayer_Recommendations()
  {
    return (EReference)presentationLayerEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRecommendationSystem()
  {
    return recommendationSystemEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRecommendationSystem_Name()
  {
    return (EAttribute)recommendationSystemEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRecommendationSystem_Generator()
  {
    return (EAttribute)recommendationSystemEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRecommendationSystem_Settings()
  {
    return (EReference)recommendationSystemEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRecommendationSystem_Scope()
  {
    return (EReference)recommendationSystemEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRecommendationSystem_Context()
  {
    return (EReference)recommendationSystemEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getValidationTechnique()
  {
    return validationTechniqueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getValidationTechnique_Name()
  {
    return (EAttribute)validationTechniqueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getValidationTechnique_NOfRecommendations()
  {
    return (EAttribute)validationTechniqueEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFeedback()
  {
    return feedbackEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFeedback_Item()
  {
    return (EReference)feedbackEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDataSource()
  {
    return dataSourceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDataSource_Name()
  {
    return (EAttribute)dataSourceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDataStructure()
  {
    return dataStructureEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDataStructure_Name()
  {
    return (EAttribute)dataStructureEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRecommendationHandler()
  {
    return recommendationHandlerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRecommendationHandler_Name()
  {
    return (EAttribute)recommendationHandlerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRecommendationHandler_WebService()
  {
    return (EReference)recommendationHandlerEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRecommendationHandler_Context()
  {
    return (EReference)recommendationHandlerEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRecommendationHandler_Usage()
  {
    return (EReference)recommendationHandlerEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEvaluation()
  {
    return evaluationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEvaluation_Name()
  {
    return (EAttribute)evaluationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEvaluation_Baselines()
  {
    return (EAttribute)evaluationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEvaluation_Metrics()
  {
    return (EAttribute)evaluationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEvaluation_ValidationTechnique()
  {
    return (EReference)evaluationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFeedbackComponent()
  {
    return feedbackComponentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFeedbackComponent_Library()
  {
    return (EAttribute)feedbackComponentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFeedbackComponent_Query()
  {
    return (EReference)feedbackComponentEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFeedbackComponent_ExpressedFeedback()
  {
    return (EReference)feedbackComponentEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVariable()
  {
    return variableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVariable_IsMissingValueAllowed()
  {
    return (EAttribute)variableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVariable_IsMultiple()
  {
    return (EAttribute)variableEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVariable_Name()
  {
    return (EAttribute)variableEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVariable_Type()
  {
    return (EAttribute)variableEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVariable_DataSource()
  {
    return (EReference)variableEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVariable_Preprocessing()
  {
    return (EReference)variableEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUnsupervisedDataset()
  {
    return unsupervisedDatasetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSupervisedDataset()
  {
    return supervisedDatasetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSupervisedDataset_DependatVariable()
  {
    return (EReference)supervisedDatasetEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPreprocessing()
  {
    return preprocessingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPreprocessing_PreprocessigTechnique()
  {
    return (EAttribute)preprocessingEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCodeRepository()
  {
    return codeRepositoryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCodeRepository_Metadata()
  {
    return (EAttribute)codeRepositoryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCommunicationChannel()
  {
    return communicationChannelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBugTrackingSystem()
  {
    return bugTrackingSystemEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDependencyManager()
  {
    return dependencyManagerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFile()
  {
    return fileEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFile_SourcePath()
  {
    return (EAttribute)fileEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFile_Encoding()
  {
    return (EAttribute)fileEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGraph()
  {
    return graphEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getGraph_Nodes()
  {
    return (EReference)graphEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getGraph_Relations()
  {
    return (EReference)graphEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMatrix()
  {
    return matrixEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMatrix_Columns()
  {
    return (EReference)matrixEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTree()
  {
    return treeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTree_Nodes()
  {
    return (EReference)treeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTree_Relations()
  {
    return (EReference)treeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTextualContent()
  {
    return textualContentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTextualContent_RootPath()
  {
    return (EAttribute)textualContentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTextualContent_Contents()
  {
    return (EReference)textualContentEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getARFF()
  {
    return arffEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getARFF_Variables()
  {
    return (EReference)arffEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVariableRelation()
  {
    return variableRelationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVariableRelation_Source()
  {
    return (EReference)variableRelationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVariableRelation_Target()
  {
    return (EReference)variableRelationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRecommendedItem()
  {
    return recommendedItemEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRecommendedItem_Ordered()
  {
    return (EAttribute)recommendedItemEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRecommendedItem_Name()
  {
    return (EAttribute)recommendedItemEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRecommendedItem_Outcame()
  {
    return (EReference)recommendedItemEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWebIService()
  {
    return webIServiceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWebIService_Library()
  {
    return (EAttribute)webIServiceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWebApplication()
  {
    return webApplicationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWebApplication_Library()
  {
    return (EAttribute)webApplicationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWebApplication_Port()
  {
    return (EAttribute)webApplicationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWebApplication_Host()
  {
    return (EAttribute)webApplicationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getIDEIntegration()
  {
    return ideIntegrationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getJupyterNotebook()
  {
    return jupyterNotebookEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVSCodePlugin()
  {
    return vsCodePluginEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVSCodePlugin_Handler()
  {
    return (EReference)vsCodePluginEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTraversableGraph()
  {
    return traversableGraphEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRawOutcomes()
  {
    return rawOutcomesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRawOutcomes_Format()
  {
    return (EAttribute)rawOutcomesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRecommendationUsage()
  {
    return recommendationUsageEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRecommendationUsage_UsageType()
  {
    return (EAttribute)recommendationUsageEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRecommendationUsage_RecommendedItems()
  {
    return (EReference)recommendationUsageEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRecommendationUsage_Guielements()
  {
    return (EReference)recommendationUsageEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRecommendationContext()
  {
    return recommendationContextEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRecommendationContext_IsProactiveSystem()
  {
    return (EAttribute)recommendationContextEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRecommendationContext_Name()
  {
    return (EAttribute)recommendationContextEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRecommendationContext_UserContext()
  {
    return (EReference)recommendationContextEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getProactiveHandler()
  {
    return proactiveHandlerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getProactiveHandler_Condition()
  {
    return (EAttribute)proactiveHandlerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getReactiveHandler()
  {
    return reactiveHandlerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getReactiveHandler_Event()
  {
    return (EReference)reactiveHandlerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGUIElement()
  {
    return guiElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUserEvent()
  {
    return userEventEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getUserEvent_EventType()
  {
    return (EAttribute)userEventEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUserStudy()
  {
    return userStudyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getUserStudy_Type()
  {
    return (EAttribute)userStudyEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getUserStudy_Analysis()
  {
    return (EAttribute)userStudyEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCrossValidation()
  {
    return crossValidationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCrossValidation_Library()
  {
    return (EAttribute)crossValidationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCrossValidation_NumberOfFold()
  {
    return (EAttribute)crossValidationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCrossValidation_GroundTruthExtractor()
  {
    return (EReference)crossValidationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getContextValidation()
  {
    return contextValidationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getContextValidation_TestContext()
  {
    return (EReference)contextValidationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRandomSplitting()
  {
    return randomSplittingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRandomSplitting_Library()
  {
    return (EAttribute)randomSplittingEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAutomatedValidation()
  {
    return automatedValidationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAutomatedValidation_Library()
  {
    return (EAttribute)automatedValidationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGroundTruthExtraction()
  {
    return groundTruthExtractionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGroundTruthExtraction_SizeGT()
  {
    return (EAttribute)groundTruthExtractionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGroundTruthExtraction_SplittingRules()
  {
    return (EAttribute)groundTruthExtractionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getGroundTruthExtraction_TargetVariable()
  {
    return (EReference)groundTruthExtractionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRecommendationSetting()
  {
    return recommendationSettingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRecommendationSetting_Key()
  {
    return (EAttribute)recommendationSettingEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRecommendationSetting_Value()
  {
    return (EAttribute)recommendationSettingEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMachineLearningBasedRS()
  {
    return machineLearningBasedRSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMachineLearningBasedRS_NumEpochs()
  {
    return (EAttribute)machineLearningBasedRSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMachineLearningBasedRS_LearningRate()
  {
    return (EAttribute)machineLearningBasedRSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMachineLearningBasedRS_MiniBatchSize()
  {
    return (EAttribute)machineLearningBasedRSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFilteringRS()
  {
    return filteringRSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFilteringRS_FilteringRSAlgorithm()
  {
    return (EAttribute)filteringRSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFilteringRS_SimilarityCalculator()
  {
    return (EAttribute)filteringRSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFilteringRS_Cutoff()
  {
    return (EAttribute)filteringRSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFilteringRS_Neighborhood()
  {
    return (EAttribute)filteringRSEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDataMiningRS()
  {
    return dataMiningRSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDataMiningRS_DataMiningRSAlgorithm()
  {
    return (EAttribute)dataMiningRSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCustomRecommender()
  {
    return customRecommenderEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCustomRecommender_Description()
  {
    return (EAttribute)customRecommenderEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCustomRecommender_RequiredTools()
  {
    return (EAttribute)customRecommenderEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGeneticAlgorithm()
  {
    return geneticAlgorithmEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGeneticAlgorithm_FitnessFunction()
  {
    return (EAttribute)geneticAlgorithmEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGeneticAlgorithm_SearchStrategy()
  {
    return (EAttribute)geneticAlgorithmEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGeneticAlgorithm_MutationOperator()
  {
    return (EAttribute)geneticAlgorithmEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDeepNN()
  {
    return deepNNEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDeepNN_NumEpochs()
  {
    return (EAttribute)deepNNEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDeepNN_LearningRate()
  {
    return (EAttribute)deepNNEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDeepNN_MiniBatchSize()
  {
    return (EAttribute)deepNNEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDeepNN_NumHiddenLayer()
  {
    return (EAttribute)deepNNEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConvolutionalNN()
  {
    return convolutionalNNEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConvolutionalNN_NumEpochs()
  {
    return (EAttribute)convolutionalNNEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConvolutionalNN_LearningRate()
  {
    return (EAttribute)convolutionalNNEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConvolutionalNN_MiniBatchSize()
  {
    return (EAttribute)convolutionalNNEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBayesian()
  {
    return bayesianEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBayesian_NumEpochs()
  {
    return (EAttribute)bayesianEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBayesian_LearningRate()
  {
    return (EAttribute)bayesianEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBayesian_MiniBatchSize()
  {
    return (EAttribute)bayesianEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRecurrentNN()
  {
    return recurrentNNEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRecurrentNN_NumEpochs()
  {
    return (EAttribute)recurrentNNEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRecurrentNN_LearningRate()
  {
    return (EAttribute)recurrentNNEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRecurrentNN_MiniBatchSize()
  {
    return (EAttribute)recurrentNNEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSVM()
  {
    return svmEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSVM_NumEpochs()
  {
    return (EAttribute)svmEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSVM_LearningRate()
  {
    return (EAttribute)svmEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSVM_MiniBatchSize()
  {
    return (EAttribute)svmEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSVM_Kernel()
  {
    return (EAttribute)svmEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDecisionTree()
  {
    return decisionTreeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDecisionTree_NumEpochs()
  {
    return (EAttribute)decisionTreeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDecisionTree_LearningRate()
  {
    return (EAttribute)decisionTreeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDecisionTree_MiniBatchSize()
  {
    return (EAttribute)decisionTreeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFeedForwardNN()
  {
    return feedForwardNNEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFeedForwardNN_NumEpochs()
  {
    return (EAttribute)feedForwardNNEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFeedForwardNN_LearningRate()
  {
    return (EAttribute)feedForwardNNEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFeedForwardNN_MiniBatchSize()
  {
    return (EAttribute)feedForwardNNEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFeedForwardNN_Solver()
  {
    return (EAttribute)feedForwardNNEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFeedForwardNN_Alpha()
  {
    return (EAttribute)feedForwardNNEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFeedForwardNN_ActivationFunction()
  {
    return (EAttribute)feedForwardNNEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFeedForwardNN_RandomState()
  {
    return (EAttribute)feedForwardNNEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getImplicitFeedback()
  {
    return implicitFeedbackEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getHybridFeedback()
  {
    return hybridFeedbackEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAdditiveFeedback()
  {
    return additiveFeedbackEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAdditiveFeedback_NumOfInsertion()
  {
    return (EAttribute)additiveFeedbackEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAdditiveFeedback_Recommender()
  {
    return (EReference)additiveFeedbackEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRating()
  {
    return ratingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRating_Type()
  {
    return (EAttribute)ratingEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getPreprocessingTechnique()
  {
    return preprocessingTechniqueEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getDatasetManipulationLibrary()
  {
    return datasetManipulationLibraryEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getVariableType()
  {
    return variableTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getWebInterfaceLibrary()
  {
    return webInterfaceLibraryEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getRecommendationUsageType()
  {
    return recommendationUsageTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getUserEventType()
  {
    return userEventTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getRawFormat()
  {
    return rawFormatEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getMetric()
  {
    return metricEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getUserStudyType()
  {
    return userStudyTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getUserStudyAnalysis()
  {
    return userStudyAnalysisEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getValidationLibrary()
  {
    return validationLibraryEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getPyLibType()
  {
    return pyLibTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getFilteringRSAlgorithm()
  {
    return filteringRSAlgorithmEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getSimilarityFunction()
  {
    return similarityFunctionEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getDataMiningRSAlgorithm()
  {
    return dataMiningRSAlgorithmEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getSearchStrategy()
  {
    return searchStrategyEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getMutationOperation()
  {
    return mutationOperationEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getKernelType()
  {
    return kernelTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getSolverType()
  {
    return solverTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getActivationType()
  {
    return activationTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getFeedbackLibType()
  {
    return feedbackLibTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getRatingType()
  {
    return ratingTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LowcodersFactory getLowcodersFactory()
  {
    return (LowcodersFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    rsModelEClass = createEClass(RS_MODEL);
    createEAttribute(rsModelEClass, RS_MODEL__NAME);
    createEReference(rsModelEClass, RS_MODEL__DATASET);
    createEReference(rsModelEClass, RS_MODEL__PRESENTATION_LAYER);
    createEReference(rsModelEClass, RS_MODEL__EVALUATION);
    createEReference(rsModelEClass, RS_MODEL__RECOMMENDATION_SYSTEM);
    createEReference(rsModelEClass, RS_MODEL__FEEDBACK);

    datasetEClass = createEClass(DATASET);
    createEAttribute(datasetEClass, DATASET__IS_BUILT_IN);
    createEAttribute(datasetEClass, DATASET__NAME);
    createEAttribute(datasetEClass, DATASET__PREPROCESSING);
    createEAttribute(datasetEClass, DATASET__DATASET_MANIPULATION_LIBRARY);
    createEAttribute(datasetEClass, DATASET__PATH);
    createEReference(datasetEClass, DATASET__INDIPENDENT_VARIABLES);
    createEReference(datasetEClass, DATASET__DATA_STRUCTURE);

    presentationLayerEClass = createEClass(PRESENTATION_LAYER);
    createEAttribute(presentationLayerEClass, PRESENTATION_LAYER__NAME);
    createEReference(presentationLayerEClass, PRESENTATION_LAYER__RECOMMENDATIONS);

    recommendationSystemEClass = createEClass(RECOMMENDATION_SYSTEM);
    createEAttribute(recommendationSystemEClass, RECOMMENDATION_SYSTEM__NAME);
    createEAttribute(recommendationSystemEClass, RECOMMENDATION_SYSTEM__GENERATOR);
    createEReference(recommendationSystemEClass, RECOMMENDATION_SYSTEM__SETTINGS);
    createEReference(recommendationSystemEClass, RECOMMENDATION_SYSTEM__SCOPE);
    createEReference(recommendationSystemEClass, RECOMMENDATION_SYSTEM__CONTEXT);

    validationTechniqueEClass = createEClass(VALIDATION_TECHNIQUE);
    createEAttribute(validationTechniqueEClass, VALIDATION_TECHNIQUE__NAME);
    createEAttribute(validationTechniqueEClass, VALIDATION_TECHNIQUE__NOF_RECOMMENDATIONS);

    feedbackEClass = createEClass(FEEDBACK);
    createEReference(feedbackEClass, FEEDBACK__ITEM);

    dataSourceEClass = createEClass(DATA_SOURCE);
    createEAttribute(dataSourceEClass, DATA_SOURCE__NAME);

    dataStructureEClass = createEClass(DATA_STRUCTURE);
    createEAttribute(dataStructureEClass, DATA_STRUCTURE__NAME);

    recommendationHandlerEClass = createEClass(RECOMMENDATION_HANDLER);
    createEAttribute(recommendationHandlerEClass, RECOMMENDATION_HANDLER__NAME);
    createEReference(recommendationHandlerEClass, RECOMMENDATION_HANDLER__WEB_SERVICE);
    createEReference(recommendationHandlerEClass, RECOMMENDATION_HANDLER__CONTEXT);
    createEReference(recommendationHandlerEClass, RECOMMENDATION_HANDLER__USAGE);

    evaluationEClass = createEClass(EVALUATION);
    createEAttribute(evaluationEClass, EVALUATION__NAME);
    createEAttribute(evaluationEClass, EVALUATION__BASELINES);
    createEAttribute(evaluationEClass, EVALUATION__METRICS);
    createEReference(evaluationEClass, EVALUATION__VALIDATION_TECHNIQUE);

    feedbackComponentEClass = createEClass(FEEDBACK_COMPONENT);
    createEAttribute(feedbackComponentEClass, FEEDBACK_COMPONENT__LIBRARY);
    createEReference(feedbackComponentEClass, FEEDBACK_COMPONENT__QUERY);
    createEReference(feedbackComponentEClass, FEEDBACK_COMPONENT__EXPRESSED_FEEDBACK);

    variableEClass = createEClass(VARIABLE);
    createEAttribute(variableEClass, VARIABLE__IS_MISSING_VALUE_ALLOWED);
    createEAttribute(variableEClass, VARIABLE__IS_MULTIPLE);
    createEAttribute(variableEClass, VARIABLE__NAME);
    createEAttribute(variableEClass, VARIABLE__TYPE);
    createEReference(variableEClass, VARIABLE__DATA_SOURCE);
    createEReference(variableEClass, VARIABLE__PREPROCESSING);

    unsupervisedDatasetEClass = createEClass(UNSUPERVISED_DATASET);

    supervisedDatasetEClass = createEClass(SUPERVISED_DATASET);
    createEReference(supervisedDatasetEClass, SUPERVISED_DATASET__DEPENDAT_VARIABLE);

    preprocessingEClass = createEClass(PREPROCESSING);
    createEAttribute(preprocessingEClass, PREPROCESSING__PREPROCESSIG_TECHNIQUE);

    codeRepositoryEClass = createEClass(CODE_REPOSITORY);
    createEAttribute(codeRepositoryEClass, CODE_REPOSITORY__METADATA);

    communicationChannelEClass = createEClass(COMMUNICATION_CHANNEL);

    bugTrackingSystemEClass = createEClass(BUG_TRACKING_SYSTEM);

    dependencyManagerEClass = createEClass(DEPENDENCY_MANAGER);

    fileEClass = createEClass(FILE);
    createEAttribute(fileEClass, FILE__SOURCE_PATH);
    createEAttribute(fileEClass, FILE__ENCODING);

    graphEClass = createEClass(GRAPH);
    createEReference(graphEClass, GRAPH__NODES);
    createEReference(graphEClass, GRAPH__RELATIONS);

    matrixEClass = createEClass(MATRIX);
    createEReference(matrixEClass, MATRIX__COLUMNS);

    treeEClass = createEClass(TREE);
    createEReference(treeEClass, TREE__NODES);
    createEReference(treeEClass, TREE__RELATIONS);

    textualContentEClass = createEClass(TEXTUAL_CONTENT);
    createEAttribute(textualContentEClass, TEXTUAL_CONTENT__ROOT_PATH);
    createEReference(textualContentEClass, TEXTUAL_CONTENT__CONTENTS);

    arffEClass = createEClass(ARFF);
    createEReference(arffEClass, ARFF__VARIABLES);

    variableRelationEClass = createEClass(VARIABLE_RELATION);
    createEReference(variableRelationEClass, VARIABLE_RELATION__SOURCE);
    createEReference(variableRelationEClass, VARIABLE_RELATION__TARGET);

    recommendedItemEClass = createEClass(RECOMMENDED_ITEM);
    createEAttribute(recommendedItemEClass, RECOMMENDED_ITEM__ORDERED);
    createEAttribute(recommendedItemEClass, RECOMMENDED_ITEM__NAME);
    createEReference(recommendedItemEClass, RECOMMENDED_ITEM__OUTCAME);

    webIServiceEClass = createEClass(WEB_ISERVICE);
    createEAttribute(webIServiceEClass, WEB_ISERVICE__LIBRARY);

    webApplicationEClass = createEClass(WEB_APPLICATION);
    createEAttribute(webApplicationEClass, WEB_APPLICATION__LIBRARY);
    createEAttribute(webApplicationEClass, WEB_APPLICATION__PORT);
    createEAttribute(webApplicationEClass, WEB_APPLICATION__HOST);

    ideIntegrationEClass = createEClass(IDE_INTEGRATION);

    jupyterNotebookEClass = createEClass(JUPYTER_NOTEBOOK);

    vsCodePluginEClass = createEClass(VS_CODE_PLUGIN);
    createEReference(vsCodePluginEClass, VS_CODE_PLUGIN__HANDLER);

    traversableGraphEClass = createEClass(TRAVERSABLE_GRAPH);

    rawOutcomesEClass = createEClass(RAW_OUTCOMES);
    createEAttribute(rawOutcomesEClass, RAW_OUTCOMES__FORMAT);

    recommendationUsageEClass = createEClass(RECOMMENDATION_USAGE);
    createEAttribute(recommendationUsageEClass, RECOMMENDATION_USAGE__USAGE_TYPE);
    createEReference(recommendationUsageEClass, RECOMMENDATION_USAGE__RECOMMENDED_ITEMS);
    createEReference(recommendationUsageEClass, RECOMMENDATION_USAGE__GUIELEMENTS);

    recommendationContextEClass = createEClass(RECOMMENDATION_CONTEXT);
    createEAttribute(recommendationContextEClass, RECOMMENDATION_CONTEXT__IS_PROACTIVE_SYSTEM);
    createEAttribute(recommendationContextEClass, RECOMMENDATION_CONTEXT__NAME);
    createEReference(recommendationContextEClass, RECOMMENDATION_CONTEXT__USER_CONTEXT);

    proactiveHandlerEClass = createEClass(PROACTIVE_HANDLER);
    createEAttribute(proactiveHandlerEClass, PROACTIVE_HANDLER__CONDITION);

    reactiveHandlerEClass = createEClass(REACTIVE_HANDLER);
    createEReference(reactiveHandlerEClass, REACTIVE_HANDLER__EVENT);

    guiElementEClass = createEClass(GUI_ELEMENT);

    userEventEClass = createEClass(USER_EVENT);
    createEAttribute(userEventEClass, USER_EVENT__EVENT_TYPE);

    userStudyEClass = createEClass(USER_STUDY);
    createEAttribute(userStudyEClass, USER_STUDY__TYPE);
    createEAttribute(userStudyEClass, USER_STUDY__ANALYSIS);

    crossValidationEClass = createEClass(CROSS_VALIDATION);
    createEAttribute(crossValidationEClass, CROSS_VALIDATION__LIBRARY);
    createEAttribute(crossValidationEClass, CROSS_VALIDATION__NUMBER_OF_FOLD);
    createEReference(crossValidationEClass, CROSS_VALIDATION__GROUND_TRUTH_EXTRACTOR);

    contextValidationEClass = createEClass(CONTEXT_VALIDATION);
    createEReference(contextValidationEClass, CONTEXT_VALIDATION__TEST_CONTEXT);

    randomSplittingEClass = createEClass(RANDOM_SPLITTING);
    createEAttribute(randomSplittingEClass, RANDOM_SPLITTING__LIBRARY);

    automatedValidationEClass = createEClass(AUTOMATED_VALIDATION);
    createEAttribute(automatedValidationEClass, AUTOMATED_VALIDATION__LIBRARY);

    groundTruthExtractionEClass = createEClass(GROUND_TRUTH_EXTRACTION);
    createEAttribute(groundTruthExtractionEClass, GROUND_TRUTH_EXTRACTION__SIZE_GT);
    createEAttribute(groundTruthExtractionEClass, GROUND_TRUTH_EXTRACTION__SPLITTING_RULES);
    createEReference(groundTruthExtractionEClass, GROUND_TRUTH_EXTRACTION__TARGET_VARIABLE);

    recommendationSettingEClass = createEClass(RECOMMENDATION_SETTING);
    createEAttribute(recommendationSettingEClass, RECOMMENDATION_SETTING__KEY);
    createEAttribute(recommendationSettingEClass, RECOMMENDATION_SETTING__VALUE);

    machineLearningBasedRSEClass = createEClass(MACHINE_LEARNING_BASED_RS);
    createEAttribute(machineLearningBasedRSEClass, MACHINE_LEARNING_BASED_RS__NUM_EPOCHS);
    createEAttribute(machineLearningBasedRSEClass, MACHINE_LEARNING_BASED_RS__LEARNING_RATE);
    createEAttribute(machineLearningBasedRSEClass, MACHINE_LEARNING_BASED_RS__MINI_BATCH_SIZE);

    filteringRSEClass = createEClass(FILTERING_RS);
    createEAttribute(filteringRSEClass, FILTERING_RS__FILTERING_RS_ALGORITHM);
    createEAttribute(filteringRSEClass, FILTERING_RS__SIMILARITY_CALCULATOR);
    createEAttribute(filteringRSEClass, FILTERING_RS__CUTOFF);
    createEAttribute(filteringRSEClass, FILTERING_RS__NEIGHBORHOOD);

    dataMiningRSEClass = createEClass(DATA_MINING_RS);
    createEAttribute(dataMiningRSEClass, DATA_MINING_RS__DATA_MINING_RS_ALGORITHM);

    customRecommenderEClass = createEClass(CUSTOM_RECOMMENDER);
    createEAttribute(customRecommenderEClass, CUSTOM_RECOMMENDER__DESCRIPTION);
    createEAttribute(customRecommenderEClass, CUSTOM_RECOMMENDER__REQUIRED_TOOLS);

    geneticAlgorithmEClass = createEClass(GENETIC_ALGORITHM);
    createEAttribute(geneticAlgorithmEClass, GENETIC_ALGORITHM__FITNESS_FUNCTION);
    createEAttribute(geneticAlgorithmEClass, GENETIC_ALGORITHM__SEARCH_STRATEGY);
    createEAttribute(geneticAlgorithmEClass, GENETIC_ALGORITHM__MUTATION_OPERATOR);

    deepNNEClass = createEClass(DEEP_NN);
    createEAttribute(deepNNEClass, DEEP_NN__NUM_EPOCHS);
    createEAttribute(deepNNEClass, DEEP_NN__LEARNING_RATE);
    createEAttribute(deepNNEClass, DEEP_NN__MINI_BATCH_SIZE);
    createEAttribute(deepNNEClass, DEEP_NN__NUM_HIDDEN_LAYER);

    convolutionalNNEClass = createEClass(CONVOLUTIONAL_NN);
    createEAttribute(convolutionalNNEClass, CONVOLUTIONAL_NN__NUM_EPOCHS);
    createEAttribute(convolutionalNNEClass, CONVOLUTIONAL_NN__LEARNING_RATE);
    createEAttribute(convolutionalNNEClass, CONVOLUTIONAL_NN__MINI_BATCH_SIZE);

    bayesianEClass = createEClass(BAYESIAN);
    createEAttribute(bayesianEClass, BAYESIAN__NUM_EPOCHS);
    createEAttribute(bayesianEClass, BAYESIAN__LEARNING_RATE);
    createEAttribute(bayesianEClass, BAYESIAN__MINI_BATCH_SIZE);

    recurrentNNEClass = createEClass(RECURRENT_NN);
    createEAttribute(recurrentNNEClass, RECURRENT_NN__NUM_EPOCHS);
    createEAttribute(recurrentNNEClass, RECURRENT_NN__LEARNING_RATE);
    createEAttribute(recurrentNNEClass, RECURRENT_NN__MINI_BATCH_SIZE);

    svmEClass = createEClass(SVM);
    createEAttribute(svmEClass, SVM__NUM_EPOCHS);
    createEAttribute(svmEClass, SVM__LEARNING_RATE);
    createEAttribute(svmEClass, SVM__MINI_BATCH_SIZE);
    createEAttribute(svmEClass, SVM__KERNEL);

    decisionTreeEClass = createEClass(DECISION_TREE);
    createEAttribute(decisionTreeEClass, DECISION_TREE__NUM_EPOCHS);
    createEAttribute(decisionTreeEClass, DECISION_TREE__LEARNING_RATE);
    createEAttribute(decisionTreeEClass, DECISION_TREE__MINI_BATCH_SIZE);

    feedForwardNNEClass = createEClass(FEED_FORWARD_NN);
    createEAttribute(feedForwardNNEClass, FEED_FORWARD_NN__NUM_EPOCHS);
    createEAttribute(feedForwardNNEClass, FEED_FORWARD_NN__LEARNING_RATE);
    createEAttribute(feedForwardNNEClass, FEED_FORWARD_NN__MINI_BATCH_SIZE);
    createEAttribute(feedForwardNNEClass, FEED_FORWARD_NN__SOLVER);
    createEAttribute(feedForwardNNEClass, FEED_FORWARD_NN__ALPHA);
    createEAttribute(feedForwardNNEClass, FEED_FORWARD_NN__ACTIVATION_FUNCTION);
    createEAttribute(feedForwardNNEClass, FEED_FORWARD_NN__RANDOM_STATE);

    implicitFeedbackEClass = createEClass(IMPLICIT_FEEDBACK);

    hybridFeedbackEClass = createEClass(HYBRID_FEEDBACK);

    additiveFeedbackEClass = createEClass(ADDITIVE_FEEDBACK);
    createEAttribute(additiveFeedbackEClass, ADDITIVE_FEEDBACK__NUM_OF_INSERTION);
    createEReference(additiveFeedbackEClass, ADDITIVE_FEEDBACK__RECOMMENDER);

    ratingEClass = createEClass(RATING);
    createEAttribute(ratingEClass, RATING__TYPE);

    // Create enums
    preprocessingTechniqueEEnum = createEEnum(PREPROCESSING_TECHNIQUE);
    datasetManipulationLibraryEEnum = createEEnum(DATASET_MANIPULATION_LIBRARY);
    variableTypeEEnum = createEEnum(VARIABLE_TYPE);
    webInterfaceLibraryEEnum = createEEnum(WEB_INTERFACE_LIBRARY);
    recommendationUsageTypeEEnum = createEEnum(RECOMMENDATION_USAGE_TYPE);
    userEventTypeEEnum = createEEnum(USER_EVENT_TYPE);
    rawFormatEEnum = createEEnum(RAW_FORMAT);
    metricEEnum = createEEnum(METRIC);
    userStudyTypeEEnum = createEEnum(USER_STUDY_TYPE);
    userStudyAnalysisEEnum = createEEnum(USER_STUDY_ANALYSIS);
    validationLibraryEEnum = createEEnum(VALIDATION_LIBRARY);
    pyLibTypeEEnum = createEEnum(PY_LIB_TYPE);
    filteringRSAlgorithmEEnum = createEEnum(FILTERING_RS_ALGORITHM);
    similarityFunctionEEnum = createEEnum(SIMILARITY_FUNCTION);
    dataMiningRSAlgorithmEEnum = createEEnum(DATA_MINING_RS_ALGORITHM);
    searchStrategyEEnum = createEEnum(SEARCH_STRATEGY);
    mutationOperationEEnum = createEEnum(MUTATION_OPERATION);
    kernelTypeEEnum = createEEnum(KERNEL_TYPE);
    solverTypeEEnum = createEEnum(SOLVER_TYPE);
    activationTypeEEnum = createEEnum(ACTIVATION_TYPE);
    feedbackLibTypeEEnum = createEEnum(FEEDBACK_LIB_TYPE);
    ratingTypeEEnum = createEEnum(RATING_TYPE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    unsupervisedDatasetEClass.getESuperTypes().add(this.getDataset());
    supervisedDatasetEClass.getESuperTypes().add(this.getDataset());
    codeRepositoryEClass.getESuperTypes().add(this.getDataSource());
    communicationChannelEClass.getESuperTypes().add(this.getDataSource());
    bugTrackingSystemEClass.getESuperTypes().add(this.getDataSource());
    dependencyManagerEClass.getESuperTypes().add(this.getDataSource());
    fileEClass.getESuperTypes().add(this.getDataSource());
    graphEClass.getESuperTypes().add(this.getDataStructure());
    matrixEClass.getESuperTypes().add(this.getDataStructure());
    treeEClass.getESuperTypes().add(this.getDataStructure());
    textualContentEClass.getESuperTypes().add(this.getDataStructure());
    arffEClass.getESuperTypes().add(this.getDataStructure());
    webIServiceEClass.getESuperTypes().add(this.getPresentationLayer());
    webApplicationEClass.getESuperTypes().add(this.getPresentationLayer());
    ideIntegrationEClass.getESuperTypes().add(this.getPresentationLayer());
    jupyterNotebookEClass.getESuperTypes().add(this.getPresentationLayer());
    vsCodePluginEClass.getESuperTypes().add(this.getPresentationLayer());
    traversableGraphEClass.getESuperTypes().add(this.getPresentationLayer());
    rawOutcomesEClass.getESuperTypes().add(this.getPresentationLayer());
    proactiveHandlerEClass.getESuperTypes().add(this.getRecommendationHandler());
    reactiveHandlerEClass.getESuperTypes().add(this.getRecommendationHandler());
    userStudyEClass.getESuperTypes().add(this.getValidationTechnique());
    crossValidationEClass.getESuperTypes().add(this.getValidationTechnique());
    contextValidationEClass.getESuperTypes().add(this.getValidationTechnique());
    randomSplittingEClass.getESuperTypes().add(this.getValidationTechnique());
    automatedValidationEClass.getESuperTypes().add(this.getValidationTechnique());
    machineLearningBasedRSEClass.getESuperTypes().add(this.getRecommendationSystem());
    filteringRSEClass.getESuperTypes().add(this.getRecommendationSystem());
    dataMiningRSEClass.getESuperTypes().add(this.getRecommendationSystem());
    customRecommenderEClass.getESuperTypes().add(this.getRecommendationSystem());
    geneticAlgorithmEClass.getESuperTypes().add(this.getRecommendationSystem());
    deepNNEClass.getESuperTypes().add(this.getRecommendationSystem());
    convolutionalNNEClass.getESuperTypes().add(this.getRecommendationSystem());
    bayesianEClass.getESuperTypes().add(this.getRecommendationSystem());
    recurrentNNEClass.getESuperTypes().add(this.getRecommendationSystem());
    svmEClass.getESuperTypes().add(this.getRecommendationSystem());
    decisionTreeEClass.getESuperTypes().add(this.getRecommendationSystem());
    feedForwardNNEClass.getESuperTypes().add(this.getRecommendationSystem());
    implicitFeedbackEClass.getESuperTypes().add(this.getFeedback());
    hybridFeedbackEClass.getESuperTypes().add(this.getFeedback());
    additiveFeedbackEClass.getESuperTypes().add(this.getFeedback());
    ratingEClass.getESuperTypes().add(this.getFeedback());

    // Initialize classes and features; add operations and parameters
    initEClass(rsModelEClass, RSModel.class, "RSModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRSModel_Name(), ecorePackage.getEString(), "name", null, 0, 1, RSModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRSModel_Dataset(), this.getDataset(), null, "dataset", null, 0, 1, RSModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRSModel_PresentationLayer(), this.getPresentationLayer(), null, "presentationLayer", null, 0, 1, RSModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRSModel_Evaluation(), this.getEvaluation(), null, "evaluation", null, 0, 1, RSModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRSModel_RecommendationSystem(), this.getRecommendationSystem(), null, "recommendationSystem", null, 0, 1, RSModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRSModel_Feedback(), this.getFeedbackComponent(), null, "feedback", null, 0, 1, RSModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(datasetEClass, Dataset.class, "Dataset", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDataset_IsBuiltIn(), ecorePackage.getEBoolean(), "isBuiltIn", null, 0, 1, Dataset.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDataset_Name(), ecorePackage.getEString(), "name", null, 0, 1, Dataset.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDataset_Preprocessing(), this.getPreprocessingTechnique(), "preprocessing", null, 0, -1, Dataset.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDataset_DatasetManipulationLibrary(), this.getDatasetManipulationLibrary(), "datasetManipulationLibrary", null, 0, -1, Dataset.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDataset_Path(), ecorePackage.getEString(), "path", null, 0, 1, Dataset.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDataset_IndipendentVariables(), this.getVariable(), null, "indipendentVariables", null, 0, -1, Dataset.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDataset_DataStructure(), this.getDataStructure(), null, "dataStructure", null, 0, 1, Dataset.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(presentationLayerEClass, PresentationLayer.class, "PresentationLayer", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPresentationLayer_Name(), ecorePackage.getEString(), "name", null, 0, 1, PresentationLayer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPresentationLayer_Recommendations(), this.getRecommendedItem(), null, "recommendations", null, 0, 1, PresentationLayer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(recommendationSystemEClass, RecommendationSystem.class, "RecommendationSystem", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRecommendationSystem_Name(), ecorePackage.getEString(), "name", null, 0, 1, RecommendationSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRecommendationSystem_Generator(), this.getPyLibType(), "generator", null, 0, 1, RecommendationSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRecommendationSystem_Settings(), this.getRecommendationSetting(), null, "settings", null, 0, -1, RecommendationSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRecommendationSystem_Scope(), this.getRecommendedItem(), null, "scope", null, 0, 1, RecommendationSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRecommendationSystem_Context(), this.getRecommendationContext(), null, "context", null, 0, 1, RecommendationSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(validationTechniqueEClass, ValidationTechnique.class, "ValidationTechnique", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getValidationTechnique_Name(), ecorePackage.getEString(), "name", null, 0, 1, ValidationTechnique.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getValidationTechnique_NOfRecommendations(), ecorePackage.getEInt(), "nOfRecommendations", null, 0, 1, ValidationTechnique.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(feedbackEClass, Feedback.class, "Feedback", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFeedback_Item(), this.getRecommendedItem(), null, "item", null, 0, 1, Feedback.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataSourceEClass, DataSource.class, "DataSource", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDataSource_Name(), ecorePackage.getEString(), "name", null, 0, 1, DataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataStructureEClass, DataStructure.class, "DataStructure", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDataStructure_Name(), ecorePackage.getEString(), "name", null, 0, 1, DataStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(recommendationHandlerEClass, RecommendationHandler.class, "RecommendationHandler", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRecommendationHandler_Name(), ecorePackage.getEString(), "name", null, 0, 1, RecommendationHandler.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRecommendationHandler_WebService(), this.getWebIService(), null, "webService", null, 0, 1, RecommendationHandler.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRecommendationHandler_Context(), this.getRecommendationContext(), null, "context", null, 0, 1, RecommendationHandler.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRecommendationHandler_Usage(), this.getRecommendationUsage(), null, "usage", null, 0, -1, RecommendationHandler.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(evaluationEClass, Evaluation.class, "Evaluation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEvaluation_Name(), ecorePackage.getEString(), "name", null, 0, 1, Evaluation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEvaluation_Baselines(), ecorePackage.getEString(), "baselines", null, 0, -1, Evaluation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEvaluation_Metrics(), this.getMetric(), "metrics", null, 0, -1, Evaluation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEvaluation_ValidationTechnique(), this.getValidationTechnique(), null, "validationTechnique", null, 0, -1, Evaluation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(feedbackComponentEClass, FeedbackComponent.class, "FeedbackComponent", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFeedbackComponent_Library(), this.getFeedbackLibType(), "library", null, 0, 1, FeedbackComponent.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFeedbackComponent_Query(), this.getRecommendationContext(), null, "query", null, 0, 1, FeedbackComponent.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFeedbackComponent_ExpressedFeedback(), this.getFeedback(), null, "expressedFeedback", null, 0, 1, FeedbackComponent.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(variableEClass, Variable.class, "Variable", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getVariable_IsMissingValueAllowed(), ecorePackage.getEBoolean(), "isMissingValueAllowed", null, 0, 1, Variable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getVariable_IsMultiple(), ecorePackage.getEBoolean(), "isMultiple", null, 0, 1, Variable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getVariable_Name(), ecorePackage.getEString(), "name", null, 0, 1, Variable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getVariable_Type(), this.getVariableType(), "type", null, 0, 1, Variable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getVariable_DataSource(), this.getDataSource(), null, "dataSource", null, 0, 1, Variable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getVariable_Preprocessing(), this.getPreprocessing(), null, "preprocessing", null, 0, 1, Variable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(unsupervisedDatasetEClass, UnsupervisedDataset.class, "UnsupervisedDataset", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(supervisedDatasetEClass, SupervisedDataset.class, "SupervisedDataset", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSupervisedDataset_DependatVariable(), this.getVariable(), null, "dependatVariable", null, 0, 1, SupervisedDataset.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(preprocessingEClass, Preprocessing.class, "Preprocessing", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPreprocessing_PreprocessigTechnique(), this.getPreprocessingTechnique(), "preprocessigTechnique", null, 0, -1, Preprocessing.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(codeRepositoryEClass, CodeRepository.class, "CodeRepository", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCodeRepository_Metadata(), ecorePackage.getEBoolean(), "metadata", null, 0, 1, CodeRepository.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(communicationChannelEClass, CommunicationChannel.class, "CommunicationChannel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(bugTrackingSystemEClass, BugTrackingSystem.class, "BugTrackingSystem", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(dependencyManagerEClass, DependencyManager.class, "DependencyManager", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(fileEClass, File.class, "File", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFile_SourcePath(), ecorePackage.getEString(), "sourcePath", null, 0, 1, File.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFile_Encoding(), ecorePackage.getEString(), "encoding", null, 0, 1, File.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(graphEClass, Graph.class, "Graph", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGraph_Nodes(), this.getVariable(), null, "nodes", null, 0, -1, Graph.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGraph_Relations(), this.getVariableRelation(), null, "relations", null, 0, 1, Graph.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(matrixEClass, Matrix.class, "Matrix", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMatrix_Columns(), this.getVariable(), null, "columns", null, 0, -1, Matrix.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(treeEClass, Tree.class, "Tree", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTree_Nodes(), this.getVariable(), null, "nodes", null, 0, -1, Tree.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTree_Relations(), this.getVariableRelation(), null, "relations", null, 0, 1, Tree.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(textualContentEClass, TextualContent.class, "TextualContent", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTextualContent_RootPath(), ecorePackage.getEString(), "rootPath", null, 0, 1, TextualContent.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTextualContent_Contents(), this.getVariable(), null, "contents", null, 0, 1, TextualContent.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(arffEClass, org.xtext.lev4recgrammar.first.lowcoders.ARFF.class, "ARFF", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getARFF_Variables(), this.getVariable(), null, "variables", null, 0, -1, org.xtext.lev4recgrammar.first.lowcoders.ARFF.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(variableRelationEClass, VariableRelation.class, "VariableRelation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getVariableRelation_Source(), this.getVariable(), null, "source", null, 0, 1, VariableRelation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getVariableRelation_Target(), this.getVariable(), null, "target", null, 0, 1, VariableRelation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(recommendedItemEClass, RecommendedItem.class, "RecommendedItem", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRecommendedItem_Ordered(), ecorePackage.getEBoolean(), "ordered", null, 0, 1, RecommendedItem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRecommendedItem_Name(), ecorePackage.getEString(), "name", null, 0, 1, RecommendedItem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRecommendedItem_Outcame(), this.getVariable(), null, "outcame", null, 0, -1, RecommendedItem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(webIServiceEClass, WebIService.class, "WebIService", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getWebIService_Library(), this.getWebInterfaceLibrary(), "library", null, 0, 1, WebIService.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(webApplicationEClass, WebApplication.class, "WebApplication", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getWebApplication_Library(), this.getWebInterfaceLibrary(), "library", null, 0, 1, WebApplication.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWebApplication_Port(), ecorePackage.getEString(), "port", null, 0, 1, WebApplication.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWebApplication_Host(), ecorePackage.getEString(), "host", null, 0, 1, WebApplication.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ideIntegrationEClass, IDEIntegration.class, "IDEIntegration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(jupyterNotebookEClass, JupyterNotebook.class, "JupyterNotebook", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(vsCodePluginEClass, VSCodePlugin.class, "VSCodePlugin", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getVSCodePlugin_Handler(), this.getRecommendationHandler(), null, "handler", null, 0, -1, VSCodePlugin.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(traversableGraphEClass, TraversableGraph.class, "TraversableGraph", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(rawOutcomesEClass, RawOutcomes.class, "RawOutcomes", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRawOutcomes_Format(), this.getRawFormat(), "format", null, 0, 1, RawOutcomes.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(recommendationUsageEClass, RecommendationUsage.class, "RecommendationUsage", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRecommendationUsage_UsageType(), this.getRecommendationUsageType(), "usageType", null, 0, 1, RecommendationUsage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRecommendationUsage_RecommendedItems(), this.getRecommendedItem(), null, "recommendedItems", null, 0, -1, RecommendationUsage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRecommendationUsage_Guielements(), this.getGUIElement(), null, "guielements", null, 0, -1, RecommendationUsage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(recommendationContextEClass, RecommendationContext.class, "RecommendationContext", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRecommendationContext_IsProactiveSystem(), ecorePackage.getEBoolean(), "isProactiveSystem", null, 0, 1, RecommendationContext.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRecommendationContext_Name(), ecorePackage.getEString(), "name", null, 0, 1, RecommendationContext.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRecommendationContext_UserContext(), this.getDataStructure(), null, "userContext", null, 0, 1, RecommendationContext.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(proactiveHandlerEClass, ProactiveHandler.class, "ProactiveHandler", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getProactiveHandler_Condition(), ecorePackage.getEBoolean(), "condition", null, 0, 1, ProactiveHandler.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(reactiveHandlerEClass, ReactiveHandler.class, "ReactiveHandler", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getReactiveHandler_Event(), this.getUserEvent(), null, "event", null, 0, 1, ReactiveHandler.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(guiElementEClass, GUIElement.class, "GUIElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(userEventEClass, UserEvent.class, "UserEvent", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getUserEvent_EventType(), this.getUserEventType(), "eventType", null, 0, 1, UserEvent.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(userStudyEClass, UserStudy.class, "UserStudy", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getUserStudy_Type(), this.getUserStudyType(), "type", null, 0, 1, UserStudy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getUserStudy_Analysis(), this.getUserStudyAnalysis(), "analysis", null, 0, 1, UserStudy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(crossValidationEClass, CrossValidation.class, "CrossValidation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCrossValidation_Library(), this.getValidationLibrary(), "library", null, 0, 1, CrossValidation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCrossValidation_NumberOfFold(), ecorePackage.getEInt(), "numberOfFold", null, 0, 1, CrossValidation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCrossValidation_GroundTruthExtractor(), this.getGroundTruthExtraction(), null, "groundTruthExtractor", null, 0, 1, CrossValidation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(contextValidationEClass, ContextValidation.class, "ContextValidation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getContextValidation_TestContext(), this.getRecommendationContext(), null, "testContext", null, 0, 1, ContextValidation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(randomSplittingEClass, RandomSplitting.class, "RandomSplitting", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRandomSplitting_Library(), this.getValidationLibrary(), "library", null, 0, 1, RandomSplitting.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(automatedValidationEClass, AutomatedValidation.class, "AutomatedValidation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAutomatedValidation_Library(), this.getValidationLibrary(), "library", null, 0, 1, AutomatedValidation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(groundTruthExtractionEClass, GroundTruthExtraction.class, "GroundTruthExtraction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGroundTruthExtraction_SizeGT(), ecorePackage.getEString(), "sizeGT", null, 0, 1, GroundTruthExtraction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGroundTruthExtraction_SplittingRules(), ecorePackage.getEString(), "splittingRules", null, 0, -1, GroundTruthExtraction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGroundTruthExtraction_TargetVariable(), this.getVariable(), null, "targetVariable", null, 0, 1, GroundTruthExtraction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(recommendationSettingEClass, RecommendationSetting.class, "RecommendationSetting", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRecommendationSetting_Key(), ecorePackage.getEString(), "key", null, 0, 1, RecommendationSetting.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRecommendationSetting_Value(), ecorePackage.getEString(), "value", null, 0, 1, RecommendationSetting.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(machineLearningBasedRSEClass, MachineLearningBasedRS.class, "MachineLearningBasedRS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMachineLearningBasedRS_NumEpochs(), ecorePackage.getEInt(), "numEpochs", null, 0, 1, MachineLearningBasedRS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMachineLearningBasedRS_LearningRate(), ecorePackage.getEInt(), "learningRate", null, 0, 1, MachineLearningBasedRS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMachineLearningBasedRS_MiniBatchSize(), ecorePackage.getEInt(), "miniBatchSize", null, 0, 1, MachineLearningBasedRS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(filteringRSEClass, FilteringRS.class, "FilteringRS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFilteringRS_FilteringRSAlgorithm(), this.getFilteringRSAlgorithm(), "filteringRSAlgorithm", null, 0, 1, FilteringRS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFilteringRS_SimilarityCalculator(), this.getSimilarityFunction(), "similarityCalculator", null, 0, 1, FilteringRS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFilteringRS_Cutoff(), ecorePackage.getEInt(), "cutoff", null, 0, 1, FilteringRS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFilteringRS_Neighborhood(), ecorePackage.getEInt(), "neighborhood", null, 0, 1, FilteringRS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataMiningRSEClass, DataMiningRS.class, "DataMiningRS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDataMiningRS_DataMiningRSAlgorithm(), this.getDataMiningRSAlgorithm(), "dataMiningRSAlgorithm", null, 0, 1, DataMiningRS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(customRecommenderEClass, CustomRecommender.class, "CustomRecommender", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCustomRecommender_Description(), ecorePackage.getEString(), "description", null, 0, 1, CustomRecommender.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCustomRecommender_RequiredTools(), ecorePackage.getEString(), "requiredTools", null, 0, -1, CustomRecommender.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(geneticAlgorithmEClass, GeneticAlgorithm.class, "GeneticAlgorithm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGeneticAlgorithm_FitnessFunction(), ecorePackage.getEString(), "fitnessFunction", null, 0, 1, GeneticAlgorithm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGeneticAlgorithm_SearchStrategy(), this.getSearchStrategy(), "searchStrategy", null, 0, 1, GeneticAlgorithm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGeneticAlgorithm_MutationOperator(), this.getMutationOperation(), "mutationOperator", null, 0, 1, GeneticAlgorithm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(deepNNEClass, DeepNN.class, "DeepNN", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDeepNN_NumEpochs(), ecorePackage.getEInt(), "numEpochs", null, 0, 1, DeepNN.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDeepNN_LearningRate(), ecorePackage.getEInt(), "learningRate", null, 0, 1, DeepNN.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDeepNN_MiniBatchSize(), ecorePackage.getEInt(), "miniBatchSize", null, 0, 1, DeepNN.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDeepNN_NumHiddenLayer(), ecorePackage.getEInt(), "numHiddenLayer", null, 0, 1, DeepNN.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(convolutionalNNEClass, ConvolutionalNN.class, "ConvolutionalNN", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getConvolutionalNN_NumEpochs(), ecorePackage.getEInt(), "numEpochs", null, 0, 1, ConvolutionalNN.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConvolutionalNN_LearningRate(), ecorePackage.getEInt(), "learningRate", null, 0, 1, ConvolutionalNN.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConvolutionalNN_MiniBatchSize(), ecorePackage.getEInt(), "miniBatchSize", null, 0, 1, ConvolutionalNN.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bayesianEClass, Bayesian.class, "Bayesian", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBayesian_NumEpochs(), ecorePackage.getEInt(), "numEpochs", null, 0, 1, Bayesian.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBayesian_LearningRate(), ecorePackage.getEInt(), "learningRate", null, 0, 1, Bayesian.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBayesian_MiniBatchSize(), ecorePackage.getEInt(), "miniBatchSize", null, 0, 1, Bayesian.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(recurrentNNEClass, RecurrentNN.class, "RecurrentNN", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRecurrentNN_NumEpochs(), ecorePackage.getEInt(), "numEpochs", null, 0, 1, RecurrentNN.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRecurrentNN_LearningRate(), ecorePackage.getEInt(), "learningRate", null, 0, 1, RecurrentNN.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRecurrentNN_MiniBatchSize(), ecorePackage.getEInt(), "miniBatchSize", null, 0, 1, RecurrentNN.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(svmEClass, org.xtext.lev4recgrammar.first.lowcoders.SVM.class, "SVM", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSVM_NumEpochs(), ecorePackage.getEInt(), "numEpochs", null, 0, 1, org.xtext.lev4recgrammar.first.lowcoders.SVM.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSVM_LearningRate(), ecorePackage.getEInt(), "learningRate", null, 0, 1, org.xtext.lev4recgrammar.first.lowcoders.SVM.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSVM_MiniBatchSize(), ecorePackage.getEInt(), "miniBatchSize", null, 0, 1, org.xtext.lev4recgrammar.first.lowcoders.SVM.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSVM_Kernel(), this.getKernelType(), "kernel", null, 0, 1, org.xtext.lev4recgrammar.first.lowcoders.SVM.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(decisionTreeEClass, DecisionTree.class, "DecisionTree", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDecisionTree_NumEpochs(), ecorePackage.getEInt(), "numEpochs", null, 0, 1, DecisionTree.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDecisionTree_LearningRate(), ecorePackage.getEInt(), "learningRate", null, 0, 1, DecisionTree.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDecisionTree_MiniBatchSize(), ecorePackage.getEInt(), "miniBatchSize", null, 0, 1, DecisionTree.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(feedForwardNNEClass, FeedForwardNN.class, "FeedForwardNN", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFeedForwardNN_NumEpochs(), ecorePackage.getEInt(), "numEpochs", null, 0, 1, FeedForwardNN.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFeedForwardNN_LearningRate(), ecorePackage.getEInt(), "learningRate", null, 0, 1, FeedForwardNN.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFeedForwardNN_MiniBatchSize(), ecorePackage.getEInt(), "miniBatchSize", null, 0, 1, FeedForwardNN.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFeedForwardNN_Solver(), this.getSolverType(), "solver", null, 0, 1, FeedForwardNN.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFeedForwardNN_Alpha(), ecorePackage.getEFloat(), "alpha", null, 0, 1, FeedForwardNN.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFeedForwardNN_ActivationFunction(), this.getActivationType(), "activationFunction", null, 0, 1, FeedForwardNN.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFeedForwardNN_RandomState(), ecorePackage.getEInt(), "randomState", null, 0, 1, FeedForwardNN.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(implicitFeedbackEClass, ImplicitFeedback.class, "ImplicitFeedback", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(hybridFeedbackEClass, HybridFeedback.class, "HybridFeedback", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(additiveFeedbackEClass, AdditiveFeedback.class, "AdditiveFeedback", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAdditiveFeedback_NumOfInsertion(), ecorePackage.getEInt(), "numOfInsertion", null, 0, 1, AdditiveFeedback.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAdditiveFeedback_Recommender(), this.getRecommendationSystem(), null, "recommender", null, 0, 1, AdditiveFeedback.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ratingEClass, Rating.class, "Rating", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRating_Type(), this.getRatingType(), "type", null, 0, 1, Rating.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(preprocessingTechniqueEEnum, PreprocessingTechnique.class, "PreprocessingTechnique");
    addEEnumLiteral(preprocessingTechniqueEEnum, PreprocessingTechnique.DUPLICATES_REMOVAL);
    addEEnumLiteral(preprocessingTechniqueEEnum, PreprocessingTechnique.NLP);
    addEEnumLiteral(preprocessingTechniqueEEnum, PreprocessingTechnique.NORMALIZATION);
    addEEnumLiteral(preprocessingTechniqueEEnum, PreprocessingTechnique.MISSING_DATA_MANIPULATION);
    addEEnumLiteral(preprocessingTechniqueEEnum, PreprocessingTechnique.VECTORIZATION);
    addEEnumLiteral(preprocessingTechniqueEEnum, PreprocessingTechnique.FEATURE_SCALING);
    addEEnumLiteral(preprocessingTechniqueEEnum, PreprocessingTechnique.TFIDF);

    initEEnum(datasetManipulationLibraryEEnum, DatasetManipulationLibrary.class, "DatasetManipulationLibrary");
    addEEnumLiteral(datasetManipulationLibraryEEnum, DatasetManipulationLibrary.PANDAS);
    addEEnumLiteral(datasetManipulationLibraryEEnum, DatasetManipulationLibrary.NUMPY);

    initEEnum(variableTypeEEnum, VariableType.class, "VariableType");
    addEEnumLiteral(variableTypeEEnum, VariableType.STRING);
    addEEnumLiteral(variableTypeEEnum, VariableType.BOOLEAN);
    addEEnumLiteral(variableTypeEEnum, VariableType.CATEGORICAL_DATA);
    addEEnumLiteral(variableTypeEEnum, VariableType.INTEGER);
    addEEnumLiteral(variableTypeEEnum, VariableType.FLOAT);

    initEEnum(webInterfaceLibraryEEnum, WebInterfaceLibrary.class, "WebInterfaceLibrary");
    addEEnumLiteral(webInterfaceLibraryEEnum, WebInterfaceLibrary.FLASK);
    addEEnumLiteral(webInterfaceLibraryEEnum, WebInterfaceLibrary.SPRING);

    initEEnum(recommendationUsageTypeEEnum, RecommendationUsageType.class, "RecommendationUsageType");
    addEEnumLiteral(recommendationUsageTypeEEnum, RecommendationUsageType.TRANSFORMATIVE);
    addEEnumLiteral(recommendationUsageTypeEEnum, RecommendationUsageType.VISUALIZATION);

    initEEnum(userEventTypeEEnum, UserEventType.class, "UserEventType");
    addEEnumLiteral(userEventTypeEEnum, UserEventType.CLICK);
    addEEnumLiteral(userEventTypeEEnum, UserEventType.SELECTION);

    initEEnum(rawFormatEEnum, RawFormat.class, "RawFormat");
    addEEnumLiteral(rawFormatEEnum, RawFormat.CSV);

    initEEnum(metricEEnum, Metric.class, "Metric");
    addEEnumLiteral(metricEEnum, Metric.PRECISION);
    addEEnumLiteral(metricEEnum, Metric.RECALL);
    addEEnumLiteral(metricEEnum, Metric.F1_MEASURE);
    addEEnumLiteral(metricEEnum, Metric.CATALOG_COVERAGE);
    addEEnumLiteral(metricEEnum, Metric.NOVELTY);
    addEEnumLiteral(metricEEnum, Metric.SALE_DIVERSITY);
    addEEnumLiteral(metricEEnum, Metric.NDCG);
    addEEnumLiteral(metricEEnum, Metric.ITEM_COVERAGE);
    addEEnumLiteral(metricEEnum, Metric.EPC);
    addEEnumLiteral(metricEEnum, Metric.GINI);

    initEEnum(userStudyTypeEEnum, UserStudyType.class, "UserStudyType");
    addEEnumLiteral(userStudyTypeEEnum, UserStudyType.FIELD_STUDIES);
    addEEnumLiteral(userStudyTypeEEnum, UserStudyType.CONTROLLED_EXPERIMENT);

    initEEnum(userStudyAnalysisEEnum, UserStudyAnalysis.class, "UserStudyAnalysis");
    addEEnumLiteral(userStudyAnalysisEEnum, UserStudyAnalysis.QUALITATIVE);
    addEEnumLiteral(userStudyAnalysisEEnum, UserStudyAnalysis.QUANTITATIVE);

    initEEnum(validationLibraryEEnum, ValidationLibrary.class, "ValidationLibrary");
    addEEnumLiteral(validationLibraryEEnum, ValidationLibrary.SKLEARN);
    addEEnumLiteral(validationLibraryEEnum, ValidationLibrary.SURPRISE);

    initEEnum(pyLibTypeEEnum, PyLibType.class, "PyLibType");
    addEEnumLiteral(pyLibTypeEEnum, PyLibType.SKLEARN);
    addEEnumLiteral(pyLibTypeEEnum, PyLibType.SURPRISE);
    addEEnumLiteral(pyLibTypeEEnum, PyLibType.TENSOR_FLOW);
    addEEnumLiteral(pyLibTypeEEnum, PyLibType.PYTORCH);
    addEEnumLiteral(pyLibTypeEEnum, PyLibType.ELLIOT);

    initEEnum(filteringRSAlgorithmEEnum, FilteringRSAlgorithm.class, "FilteringRSAlgorithm");
    addEEnumLiteral(filteringRSAlgorithmEEnum, FilteringRSAlgorithm.CONTENT_BASED);
    addEEnumLiteral(filteringRSAlgorithmEEnum, FilteringRSAlgorithm.DEMOGRAPHIC);
    addEEnumLiteral(filteringRSAlgorithmEEnum, FilteringRSAlgorithm.USER_BASED);
    addEEnumLiteral(filteringRSAlgorithmEEnum, FilteringRSAlgorithm.ITEM_BASED);
    addEEnumLiteral(filteringRSAlgorithmEEnum, FilteringRSAlgorithm.CONTEXT_AWARE);
    addEEnumLiteral(filteringRSAlgorithmEEnum, FilteringRSAlgorithm.HYBRID);

    initEEnum(similarityFunctionEEnum, SimilarityFunction.class, "SimilarityFunction");
    addEEnumLiteral(similarityFunctionEEnum, SimilarityFunction.COSINE_SIMILARITY);
    addEEnumLiteral(similarityFunctionEEnum, SimilarityFunction.JACCARD_DISTANCE);
    addEEnumLiteral(similarityFunctionEEnum, SimilarityFunction.WORD_EMBEDDINGS);
    addEEnumLiteral(similarityFunctionEEnum, SimilarityFunction.LEVENSHTEIN_DISTANCE);
    addEEnumLiteral(similarityFunctionEEnum, SimilarityFunction.SVD);
    addEEnumLiteral(similarityFunctionEEnum, SimilarityFunction.GRAPH_BASED);
    addEEnumLiteral(similarityFunctionEEnum, SimilarityFunction.MSD);
    addEEnumLiteral(similarityFunctionEEnum, SimilarityFunction.EUCLIDEAN_DISTANCE);

    initEEnum(dataMiningRSAlgorithmEEnum, DataMiningRSAlgorithm.class, "DataMiningRSAlgorithm");
    addEEnumLiteral(dataMiningRSAlgorithmEEnum, DataMiningRSAlgorithm.CLUSTERING);
    addEEnumLiteral(dataMiningRSAlgorithmEEnum, DataMiningRSAlgorithm.FREQUENT_ITEM_SET);
    addEEnumLiteral(dataMiningRSAlgorithmEEnum, DataMiningRSAlgorithm.ASSOCIATION_RULE);
    addEEnumLiteral(dataMiningRSAlgorithmEEnum, DataMiningRSAlgorithm.EVENT_STREAM);
    addEEnumLiteral(dataMiningRSAlgorithmEEnum, DataMiningRSAlgorithm.TEXT_MINING);

    initEEnum(searchStrategyEEnum, SearchStrategy.class, "SearchStrategy");
    addEEnumLiteral(searchStrategyEEnum, SearchStrategy.SIMULATED_ANNELING);
    addEEnumLiteral(searchStrategyEEnum, SearchStrategy.HILL_CLIMBING);
    addEEnumLiteral(searchStrategyEEnum, SearchStrategy.GRADIENT_DESCENT);
    addEEnumLiteral(searchStrategyEEnum, SearchStrategy.EGGHOLDER_FUNCTION);

    initEEnum(mutationOperationEEnum, MutationOperation.class, "MutationOperation");
    addEEnumLiteral(mutationOperationEEnum, MutationOperation.FIT_BIT);
    addEEnumLiteral(mutationOperationEEnum, MutationOperation.CROSSOVER);
    addEEnumLiteral(mutationOperationEEnum, MutationOperation.SHRINK_MUTATION);
    addEEnumLiteral(mutationOperationEEnum, MutationOperation.REPACE_MUTATION);
    addEEnumLiteral(mutationOperationEEnum, MutationOperation.PARTIAL_HYPER_MUTATION);
    addEEnumLiteral(mutationOperationEEnum, MutationOperation.DUPLICATION);

    initEEnum(kernelTypeEEnum, KernelType.class, "KernelType");
    addEEnumLiteral(kernelTypeEEnum, KernelType.PRECOMPUTED);
    addEEnumLiteral(kernelTypeEEnum, KernelType.LINEAR);
    addEEnumLiteral(kernelTypeEEnum, KernelType.POLY);
    addEEnumLiteral(kernelTypeEEnum, KernelType.RBF);
    addEEnumLiteral(kernelTypeEEnum, KernelType.SIGMOID);

    initEEnum(solverTypeEEnum, SolverType.class, "SolverType");
    addEEnumLiteral(solverTypeEEnum, SolverType.ADAM);
    addEEnumLiteral(solverTypeEEnum, SolverType.LBFGS);
    addEEnumLiteral(solverTypeEEnum, SolverType.SGD);

    initEEnum(activationTypeEEnum, ActivationType.class, "ActivationType");
    addEEnumLiteral(activationTypeEEnum, ActivationType.RELU);
    addEEnumLiteral(activationTypeEEnum, ActivationType.SIGMOID);
    addEEnumLiteral(activationTypeEEnum, ActivationType.TANH);

    initEEnum(feedbackLibTypeEEnum, FeedbackLibType.class, "FeedbackLibType");
    addEEnumLiteral(feedbackLibTypeEEnum, FeedbackLibType.LIGHTFM);
    addEEnumLiteral(feedbackLibTypeEEnum, FeedbackLibType.LIGHTGBM);

    initEEnum(ratingTypeEEnum, RatingType.class, "RatingType");
    addEEnumLiteral(ratingTypeEEnum, RatingType.POSITIVE);
    addEEnumLiteral(ratingTypeEEnum, RatingType.NEGATIVE);
    addEEnumLiteral(ratingTypeEEnum, RatingType.NUMERICAL);
    addEEnumLiteral(ratingTypeEEnum, RatingType.ORDINAL);
    addEEnumLiteral(ratingTypeEEnum, RatingType.UNARY);

    // Create resource
    createResource(eNS_URI);
  }

} //LowcodersPackageImpl
