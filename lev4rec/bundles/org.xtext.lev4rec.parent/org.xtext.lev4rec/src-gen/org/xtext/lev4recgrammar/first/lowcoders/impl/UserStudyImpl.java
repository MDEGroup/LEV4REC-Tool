/**
 * generated by Xtext 2.23.0
 */
package org.xtext.lev4recgrammar.first.lowcoders.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.lev4recgrammar.first.lowcoders.LowcodersPackage;
import org.xtext.lev4recgrammar.first.lowcoders.UserStudy;
import org.xtext.lev4recgrammar.first.lowcoders.UserStudyAnalysis;
import org.xtext.lev4recgrammar.first.lowcoders.UserStudyType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>User Study</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.lev4recgrammar.first.lowcoders.impl.UserStudyImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.lev4recgrammar.first.lowcoders.impl.UserStudyImpl#getAnalysis <em>Analysis</em>}</li>
 * </ul>
 *
 * @generated
 */
public class UserStudyImpl extends ValidationTechniqueImpl implements UserStudy
{
  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final UserStudyType TYPE_EDEFAULT = UserStudyType.FIELD_STUDIES;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected UserStudyType type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getAnalysis() <em>Analysis</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAnalysis()
   * @generated
   * @ordered
   */
  protected static final UserStudyAnalysis ANALYSIS_EDEFAULT = UserStudyAnalysis.QUALITATIVE;

  /**
   * The cached value of the '{@link #getAnalysis() <em>Analysis</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAnalysis()
   * @generated
   * @ordered
   */
  protected UserStudyAnalysis analysis = ANALYSIS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UserStudyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LowcodersPackage.Literals.USER_STUDY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UserStudyType getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(UserStudyType newType)
  {
    UserStudyType oldType = type;
    type = newType == null ? TYPE_EDEFAULT : newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LowcodersPackage.USER_STUDY__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UserStudyAnalysis getAnalysis()
  {
    return analysis;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAnalysis(UserStudyAnalysis newAnalysis)
  {
    UserStudyAnalysis oldAnalysis = analysis;
    analysis = newAnalysis == null ? ANALYSIS_EDEFAULT : newAnalysis;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LowcodersPackage.USER_STUDY__ANALYSIS, oldAnalysis, analysis));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LowcodersPackage.USER_STUDY__TYPE:
        return getType();
      case LowcodersPackage.USER_STUDY__ANALYSIS:
        return getAnalysis();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LowcodersPackage.USER_STUDY__TYPE:
        setType((UserStudyType)newValue);
        return;
      case LowcodersPackage.USER_STUDY__ANALYSIS:
        setAnalysis((UserStudyAnalysis)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LowcodersPackage.USER_STUDY__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case LowcodersPackage.USER_STUDY__ANALYSIS:
        setAnalysis(ANALYSIS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LowcodersPackage.USER_STUDY__TYPE:
        return type != TYPE_EDEFAULT;
      case LowcodersPackage.USER_STUDY__ANALYSIS:
        return analysis != ANALYSIS_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (type: ");
    result.append(type);
    result.append(", analysis: ");
    result.append(analysis);
    result.append(')');
    return result.toString();
  }

} //UserStudyImpl
