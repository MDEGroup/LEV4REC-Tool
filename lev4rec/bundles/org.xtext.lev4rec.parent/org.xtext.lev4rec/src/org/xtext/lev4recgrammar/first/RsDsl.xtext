grammar org.xtext.lev4recgrammar.first.RsDsl with org.eclipse.xtext.common.Terminals

generate lowcoders "https://it.disim.univaq/lowcode"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
	




RSModel:
	'RSModel'
	name=EString
	'{'
		('dataset' ':' dataset=Dataset)?
		('presentationLayer' ':' presentationLayer=PresentationLayer)?
		('evaluation' ':' evaluation=Evaluation)?
		'recommendationSystem' ':' recommendationSystem=RecommendationSystem
		('feedback' ':' feedback=FeedbackComponent)?
	'}'
	;

Dataset returns Dataset:
	UnsupervisedDataset | SupervisedDataset;

PresentationLayer returns PresentationLayer:
	WebIService | WebApplication | IDEIntegration_Impl | VSCodePlugin | TraversableGraph | RawOutcomes | JupyterNotebook;


RecommendationSystem returns RecommendationSystem:
	MachineLearningBasedRS_Impl | FilteringRS | DataMiningRS | CustomRecommender | GeneticAlgorithm | DeepNN | ConvolutionalNN | Bayesian | RecurrentNN | SVM | DecisionTree | FeedForwardNN;


ValidationTechnique returns ValidationTechnique:
	UserStudy | CrossValidation | ContextValidation | RandomSplitting | AutomatedValidation_Impl;


Feedback returns Feedback:
	ImplicitFeedback | HybridFeedback | AdditiveFeedback | Rating;

DataSource returns DataSource:
	CodeRepository | CommunicationChannel | BugTrackingSystem | DependencyManager | File;



DataStructure returns DataStructure:
	Graph_Impl | Matrix | Tree | TextualContent | ARFF;



RecommendationHandler returns RecommendationHandler:
	RecommendationHandler_Impl | ProactiveHandler | ReactiveHandler;







EString returns ecore::EString:
	STRING | ID;

Evaluation returns Evaluation:
	{Evaluation}
	'Evaluation'
	name=EString
	'{'
		('baselines' '[' baselines+=EString ( "," baselines+=EString)* ']' )?
		('metrics' '[' metrics+=Metric ( "," metrics+=Metric)* ']' )?
		('validationTechnique' '[' validationTechnique+=ValidationTechnique ( "," validationTechnique+=ValidationTechnique)* ']' )?
		
	'}'
	;

FeedbackComponent returns FeedbackComponent:
	{FeedbackComponent}
	'FeedbackComponent'
	
		('library' library=FeedbackLibType)?
		('query' query=RecommendationContext)?
		('expressedFeedback' expressedFeedback=Feedback)?
	;

Variable returns Variable:
	(isMissingValueAllowed?='isMissingValueAllowed')?
	(isMultiple?='isMultiple')?
	'Variable'
	name=EString
	'{'
		'type' type=VariableType
		'dataSource' dataSource=DataSource
		('preprocessing' preprocessing=Preprocessing)?
	'}';

enum PreprocessingTechnique returns PreprocessingTechnique:
				DUPLICATES_REMOVAL = 'DUPLICATES_REMOVAL' | NLP = 'NLP' | NORMALIZATION = 'NORMALIZATION' | MISSING_DATA_MANIPULATION = 'MISSING_DATA_MANIPULATION' | VECTORIZATION = 'VECTORIZATION' | FEATURE_SCALING = 'FEATURE_SCALING' | TFIDF = 'TFIDF';

enum DatasetManipulationLibrary returns DatasetManipulationLibrary:
				PANDAS = 'PANDAS' | NUMPY = 'NUMPY';

EBoolean returns ecore::EBoolean:
	'true' | 'false';

UnsupervisedDataset returns UnsupervisedDataset:
	(isBuiltIn?='isBuiltIn')?
	'UnsupervisedDataset'
	name=EString
	'{'
		('preprocessing' '[' preprocessing+=PreprocessingTechnique ( "," preprocessing+=PreprocessingTechnique)* ']' )?
		('datasetManipulationLibrary' '[' datasetManipulationLibrary+=DatasetManipulationLibrary ( "," datasetManipulationLibrary+=DatasetManipulationLibrary)* ']' )?
		'path' path=EString
		('indipendentVariables' '[' indipendentVariables+=Variable ( "," indipendentVariables+=Variable)* ']' )?
		('dataStructure' dataStructure=DataStructure)?
	'}'
	;

SupervisedDataset returns SupervisedDataset:
	(isBuiltIn?='isBuiltIn')?
	'SupervisedDataset'
	name=EString
	'{'
		('preprocessing' '[' preprocessing+=PreprocessingTechnique ( "," preprocessing+=PreprocessingTechnique)* ']' )?
		('datasetManipulationLibrary' '[' datasetManipulationLibrary+=DatasetManipulationLibrary ( "," datasetManipulationLibrary+=DatasetManipulationLibrary)* ']' )?
		'path' path=EString
		('indipendentVariables' '[' indipendentVariables+=Variable ( "," indipendentVariables+=Variable)* ']' )?
		('dataStructure' dataStructure=DataStructure)?
		'dependatVariable' dependatVariable=Variable
	'}'
	;

Preprocessing returns Preprocessing:
	{Preprocessing}
	'Preprocessing'	
	'{'
		('preprocessigTechnique' '[' preprocessigTechnique+=PreprocessingTechnique ( "," preprocessigTechnique+=PreprocessingTechnique)* ']' )?
	'}'
	;

enum VariableType returns VariableType:
				String = 'String' | Boolean = 'Boolean' | CategoricalData = 'CategoricalData' | Integer = 'Integer' | Float = 'Float';

CodeRepository returns CodeRepository:
	{CodeRepository}
	(metadata?='metadata')?
	'CodeRepository'
	name=EString;

CommunicationChannel returns CommunicationChannel:
	{CommunicationChannel}
	'CommunicationChannel'
	name=EString;

BugTrackingSystem returns BugTrackingSystem:
	{BugTrackingSystem}
	'BugTrackingSystem'
	name=EString;

DependencyManager returns DependencyManager:
	{DependencyManager}
	'DependencyManager'
	name=EString;

File returns File:
	{File}
	'File'
	name=EString
	'{'
		('sourcePath' sourcePath=EString)?
		('encoding' encoding=EString)?
	'}';

Graph_Impl returns Graph:
	{Graph}
	'Graph'
	name=EString
	'{'
		('nodes' '(' nodes+=[Variable|EString] ( "," nodes+=[Variable|EString])* ')' )?
		('relations' relations=VariableRelation)?
	'}';

Matrix returns Matrix:
	{Matrix}
	'Matrix'
	name=EString
	'{'
		('columns' '(' columns+=[Variable|EString] ( "," columns+=[Variable|EString])* ')' )?
	'}';

Tree returns Tree:
	{Tree}
	'Tree'
	name=EString
	'{'
		('nodes' '(' nodes+=[Variable|EString] ( "," nodes+=[Variable|EString])* ')' )?
		('relations' relations=VariableRelation)?
	'}';

TextualContent returns TextualContent:
	{TextualContent}
	'TextualContent'
	name=EString
	'{'
		('rootPath' rootPath=EString)?
		('contents' contents=[Variable|EString])?
	'}';

ARFF returns ARFF:
	{ARFF}
	'ARFF'
	name=EString
	'{'
		('variables' '(' variables+=[Variable|EString] ( "," variables+=[Variable|EString])* ')' )?
	'}';

VariableRelation returns VariableRelation:
	{VariableRelation}
	'VariableRelation'
	'{'
		('source' source=[Variable|EString])?
		('target' target=[Variable|EString])?
	'}';

RecommendedItem returns RecommendedItem:
	{RecommendedItem}
	(ordered?='ordered')?
	'RecommendedItem'
	name=EString
	'{'
		('outcame' '(' outcame+=[Variable|EString] ( "," outcame+=[Variable|EString])* ')' )?
	'}';

WebIService returns WebIService:
	{WebIService}
	'WebIService'
	name=EString
	'{'
		('library' library=WebInterfaceLibrary)?
		('recommendations' recommendations=[RecommendedItem|EString])?
	'}';

WebApplication returns WebApplication:
	{WebApplication}
	'WebApplication'
	name=EString
	'{'
		('library' library=WebInterfaceLibrary)?
		('port' port=EString)?
		('host' host=EString)?
		('recommendations' recommendations=[RecommendedItem|EString])?
	'}';

IDEIntegration_Impl returns IDEIntegration:
	{IDEIntegration}
	'IDEIntegration'
	name=EString
	'{'
		('recommendations' recommendations=[RecommendedItem|EString])?
	'}';

JupyterNotebook returns JupyterNotebook:
	{JupyterNotebook}
	'JupyterNotebook'
	name=EString
	'{'		
		('recommendations' recommendations=[RecommendedItem|EString])?
	'}';


VSCodePlugin returns VSCodePlugin:
	'VSCodePlugin'
	name=EString
	'{'
		('recommendations' recommendations=[RecommendedItem|EString])?
		'handler' '(' handler+=[RecommendationHandler|EString] ( "," handler+=[RecommendationHandler|EString])* ')' 
	'}';

TraversableGraph returns TraversableGraph:
	{TraversableGraph}
	'TraversableGraph'
	name=EString
	'{'
		('recommendations' recommendations=[RecommendedItem|EString])?
	'}';

RawOutcomes returns RawOutcomes:
	{RawOutcomes}
	'RawOutcomes'
	name=EString
	'{'
		('format' format=RawFormat)?
		('recommendations' recommendations=[RecommendedItem|EString])?
	'}';

enum WebInterfaceLibrary returns WebInterfaceLibrary:
				FLASK = 'FLASK' | SPRING = 'SPRING';

RecommendationHandler_Impl returns RecommendationHandler:
	{RecommendationHandler}
	'RecommendationHandler'
	name=EString
	'{'
		('webService' webService=[WebIService|EString])?
		('context' context=[RecommendationContext|EString])?
		('usage' '{' usage+=RecommendationUsage ( "," usage+=RecommendationUsage)* '}' )?
	'}';

RecommendationUsage returns RecommendationUsage:
	{RecommendationUsage}
	'RecommendationUsage'
	'{'
		('usageType' usageType=RecommendationUsageType)?
		('recommendedItems' '(' recommendedItems+=[RecommendedItem|EString] ( "," recommendedItems+=[RecommendedItem|EString])* ')' )?
		('guielements' '{' guielements+=GUIElement ( "," guielements+=GUIElement)* '}' )?
	'}';

RecommendationContext returns RecommendationContext:
	{RecommendationContext}
	(isProactiveSystem?='isProactiveSystem')?
	'RecommendationContext'
	name=EString
	'{'
		('userContext' userContext=[DataStructure|EString])?
	'}';

ProactiveHandler returns ProactiveHandler:
	{ProactiveHandler}
	(condition?='condition')?
	'ProactiveHandler'
	name=EString
	'{'
		('webService' webService=[WebIService|EString])?
		('context' context=[RecommendationContext|EString])?
		('usage' '{' usage+=RecommendationUsage ( "," usage+=RecommendationUsage)* '}' )?
	'}';

ReactiveHandler returns ReactiveHandler:
	{ReactiveHandler}
	'ReactiveHandler'
	name=EString
	'{'
		('webService' webService=[WebIService|EString])?
		('context' context=[RecommendationContext|EString])?
		('event' event=[UserEvent|EString])?
		('usage' '{' usage+=RecommendationUsage ( "," usage+=RecommendationUsage)* '}' )?
	'}';

enum RecommendationUsageType returns RecommendationUsageType:
				Transformative = 'Transformative' | Visualization = 'Visualization';

GUIElement returns GUIElement:
	{GUIElement}
	'GUIElement'
	;

UserEvent returns UserEvent:
	{UserEvent}
	'UserEvent'
	'{'
		('eventType' eventType=UserEventType)?
	'}';

enum UserEventType returns UserEventType:
				Click = 'Click' | Selection = 'Selection';

enum RawFormat returns RawFormat:
				CSV = 'CSV';

enum Metric returns Metric:
				PRECISION = 'PRECISION' | RECALL = 'RECALL' | F1_MEASURE = 'F1_MEASURE' | CATALOG_COVERAGE = 'CATALOG_COVERAGE' | NOVELTY = 'NOVELTY' | SALE_DIVERSITY = 'SALE_DIVERSITY' | NDCG = 'NDCG' | ITEM_COVERAGE = 'ITEM_COVERAGE' | EPC = 'EPC' | GINI = 'GINI';

EInt returns ecore::EInt:
	'-'? INT;

UserStudy returns UserStudy:
	'UserStudy'
	name=EString
	'{'
		'nOfRecommendations' nOfRecommendations=EInt
		('type' type=UserStudyType)?
		('analysis' analysis=UserStudyAnalysis)?
	'}';

CrossValidation returns CrossValidation:
	'CrossValidation'
	name=EString
	'{'
		'nOfRecommendations' nOfRecommendations=EInt
		('library' library=ValidationLibrary)?
		('numberOfFold' numberOfFold=EInt)?
		('groundTruthExtractor' groundTruthExtractor=GroundTruthExtraction)?
	'}';

ContextValidation returns ContextValidation:
	'ContextValidation'
	name=EString
	'{'
		'nOfRecommendations' nOfRecommendations=EInt
		('testContext' testContext=[RecommendationContext|EString])?
	'}';

RandomSplitting returns RandomSplitting:
	'RandomSplitting'
	name=EString
	'{'
		'nOfRecommendations' nOfRecommendations=EInt
		('library' library=ValidationLibrary)?
	'}';

AutomatedValidation_Impl returns AutomatedValidation:
	'AutomatedValidation'
	name=EString
	'{'
		'nOfRecommendations' nOfRecommendations=EInt
		('library' library=ValidationLibrary)?
	'}';

enum UserStudyType returns UserStudyType:
				FIELD_STUDIES = 'FIELD_STUDIES' | CONTROLLED_EXPERIMENT = 'CONTROLLED_EXPERIMENT';

enum UserStudyAnalysis returns UserStudyAnalysis:
				QUALITATIVE = 'QUALITATIVE' | QUANTITATIVE = 'QUANTITATIVE';

enum ValidationLibrary returns ValidationLibrary:
				SKLEARN = 'SKLEARN' | SURPRISE = 'SURPRISE';

GroundTruthExtraction returns GroundTruthExtraction:
	{GroundTruthExtraction}
	'GroundTruthExtraction'
	'{'
		('sizeGT' sizeGT=EString)?
		('splittingRules' '{' splittingRules+=EString ( "," splittingRules+=EString)* '}' )?
		('targetVariable' targetVariable=[Variable|EString])?
	'}';

RecommendationSetting returns RecommendationSetting:
	'RecommendationSetting'
	'{'
		'key' key=EString
		'value' value=EString
	'}';

enum PyLibType returns PyLibType:
				SKLEARN = 'SKLEARN' | SURPRISE = 'SURPRISE' | TENSOR_FLOW = 'TENSOR_FLOW' | PYTORCH = 'PYTORCH' | ELLIOT = 'ELLIOT';

MachineLearningBasedRS_Impl returns MachineLearningBasedRS:
	{MachineLearningBasedRS}
	'MachineLearningBasedRS'
	name=EString
	'{'
		('generator' generator=PyLibType)?
		('numEpochs' numEpochs=EInt)?
		('learningRate' learningRate=EInt)?
		('miniBatchSize' miniBatchSize=EInt)?
		('settings' '{' settings+=RecommendationSetting ( "," settings+=RecommendationSetting)* '}' )?
		('scope' scope=RecommendedItem)?
		('context' context=RecommendationContext)?
	'}';

FilteringRS returns FilteringRS:
	{FilteringRS}
	'FilteringRS'
	name=EString
	'{'
		('generator' generator=PyLibType)?
		('filteringRSAlgorithm' filteringRSAlgorithm=FilteringRSAlgorithm)?
		('similarityCalculator' similarityCalculator=SimilarityFunction)?
		('cutoff' cutoff=EInt)?
		('neighborhood' neighborhood=EInt)?
		('settings' '{' settings+=RecommendationSetting ( "," settings+=RecommendationSetting)* '}' )?
		('scope' scope=RecommendedItem)?
		('context' context=RecommendationContext)?
	'}';

DataMiningRS returns DataMiningRS:
	{DataMiningRS}
	'DataMiningRS'
	name=EString
	'{'
		('generator' generator=PyLibType)?
		('dataMiningRSAlgorithm' dataMiningRSAlgorithm=DataMiningRSAlgorithm)?
		('settings' '{' settings+=RecommendationSetting ( "," settings+=RecommendationSetting)* '}' )?
		('scope' scope=RecommendedItem)?
		('context' context=RecommendationContext)?
	'}';

CustomRecommender returns CustomRecommender:
	{CustomRecommender}
	'CustomRecommender'
	name=EString
	'{'
		('generator' generator=PyLibType)?
		('description' description=EString)?
		('requiredTools' '{' requiredTools+=EString ( "," requiredTools+=EString)* '}' )?
		('settings' '{' settings+=RecommendationSetting ( "," settings+=RecommendationSetting)* '}' )?
		('scope' scope=RecommendedItem)?
		('context' context=RecommendationContext)?
	'}';

GeneticAlgorithm returns GeneticAlgorithm:
	{GeneticAlgorithm}
	'GeneticAlgorithm'
	name=EString
	'{'
		('generator' generator=PyLibType)?
		('fitnessFunction' fitnessFunction=EString)?
		('searchStrategy' searchStrategy=SearchStrategy)?
		('mutationOperator' mutationOperator=MutationOperation)?
		('settings' '{' settings+=RecommendationSetting ( "," settings+=RecommendationSetting)* '}' )?
		('scope' scope=RecommendedItem)?
		('context' context=RecommendationContext)?
	'}';

DeepNN returns DeepNN:
	{DeepNN}
	'DeepNN'
	name=EString
	'{'
		('generator' generator=PyLibType)?
		('numEpochs' numEpochs=EInt)?
		('learningRate' learningRate=EInt)?
		('miniBatchSize' miniBatchSize=EInt)?
		('numHiddenLayer' numHiddenLayer=EInt)?
		('settings' '{' settings+=RecommendationSetting ( "," settings+=RecommendationSetting)* '}' )?
		('scope' scope=RecommendedItem)?
		('context' context=RecommendationContext)?
	'}';

ConvolutionalNN returns ConvolutionalNN:
	{ConvolutionalNN}
	'ConvolutionalNN'
	name=EString
	'{'
		('generator' generator=PyLibType)?
		('numEpochs' numEpochs=EInt)?
		('learningRate' learningRate=EInt)?
		('miniBatchSize' miniBatchSize=EInt)?
		('settings' '{' settings+=RecommendationSetting ( "," settings+=RecommendationSetting)* '}' )?
		('scope' scope=RecommendedItem)?
		('context' context=RecommendationContext)?
	'}';

Bayesian returns Bayesian:
	{Bayesian}
	'Bayesian'
	name=EString
	'{'
		('generator' generator=PyLibType)?
		('numEpochs' numEpochs=EInt)?
		('learningRate' learningRate=EInt)?
		('miniBatchSize' miniBatchSize=EInt)?
		('settings' '{' settings+=RecommendationSetting ( "," settings+=RecommendationSetting)* '}' )?
		('scope' scope=RecommendedItem)?
		('context' context=RecommendationContext)?
	'}';

RecurrentNN returns RecurrentNN:
	{RecurrentNN}
	'RecurrentNN'
	name=EString
	'{'
		('generator' generator=PyLibType)?
		('numEpochs' numEpochs=EInt)?
		('learningRate' learningRate=EInt)?
		('miniBatchSize' miniBatchSize=EInt)?
		('settings' '{' settings+=RecommendationSetting ( "," settings+=RecommendationSetting)* '}' )?
		('scope' scope=RecommendedItem)?
		('context' context=RecommendationContext)?
	'}';

SVM returns SVM:
	{SVM}
	'SVM'
	name=EString
	'{'
		('generator' generator=PyLibType)?
		('numEpochs' numEpochs=EInt)?
		('learningRate' learningRate=EInt)?
		('miniBatchSize' miniBatchSize=EInt)?
		('kernel' kernel=KernelType)?
		('settings' '{' settings+=RecommendationSetting ( "," settings+=RecommendationSetting)* '}' )?
		('scope' scope=RecommendedItem)?
		('context' context=RecommendationContext)?
	'}';

DecisionTree returns DecisionTree:
	{DecisionTree}
	'DecisionTree'
	name=EString
	'{'
		('generator' generator=PyLibType)?
		('numEpochs' numEpochs=EInt)?
		('learningRate' learningRate=EInt)?
		('miniBatchSize' miniBatchSize=EInt)?
		('settings' '{' settings+=RecommendationSetting ( "," settings+=RecommendationSetting)* '}' )?
		('scope' scope=RecommendedItem)?
		('context' context=RecommendationContext)?
	'}';

FeedForwardNN returns FeedForwardNN:
	{FeedForwardNN}
	'FeedForwardNN'
	name=EString
	'{'
		('generator' generator=PyLibType)?
		('numEpochs' numEpochs=EInt)?
		('learningRate' learningRate=EInt)?
		('miniBatchSize' miniBatchSize=EInt)?
		('solver' solver=SolverType)?
		('alpha' alpha=EFloat)?
		('activationFunction' activationFunction=ActivationType)?
		('randomState' randomState=EInt)?
		('settings' '{' settings+=RecommendationSetting ( "," settings+=RecommendationSetting)* '}' )?
		('scope' scope=RecommendedItem)?
		('context' context=RecommendationContext)?
	'}';

enum FilteringRSAlgorithm returns FilteringRSAlgorithm:
				CONTENT_BASED = 'CONTENT_BASED' | DEMOGRAPHIC = 'DEMOGRAPHIC' | USER_BASED = 'USER_BASED' | ITEM_BASED = 'ITEM_BASED' | CONTEXT_AWARE = 'CONTEXT_AWARE' | HYBRID = 'HYBRID';

enum SimilarityFunction returns SimilarityFunction:
				COSINE_SIMILARITY = 'COSINE_SIMILARITY' | JACCARD_DISTANCE = 'JACCARD_DISTANCE' | WORD_EMBEDDINGS = 'WORD_EMBEDDINGS' | LEVENSHTEIN_DISTANCE = 'LEVENSHTEIN_DISTANCE' | SVD = 'SVD' | GRAPH_BASED = 'GRAPH_BASED' | MSD = 'MSD' | EUCLIDEAN_DISTANCE = 'EUCLIDEAN_DISTANCE';

enum DataMiningRSAlgorithm returns DataMiningRSAlgorithm:
				CLUSTERING = 'CLUSTERING' | FREQUENT_ITEM_SET = 'FREQUENT_ITEM_SET' | ASSOCIATION_RULE = 'ASSOCIATION_RULE' | EVENT_STREAM = 'EVENT_STREAM' | TEXT_MINING = 'TEXT_MINING';

enum SearchStrategy returns SearchStrategy:
				SIMULATED_ANNELING = 'SIMULATED_ANNELING' | HILL_CLIMBING = 'HILL_CLIMBING' | GRADIENT_DESCENT = 'GRADIENT_DESCENT' | EGGHOLDER_FUNCTION = 'EGGHOLDER_FUNCTION';

enum MutationOperation returns MutationOperation:
				FIT_BIT = 'FIT_BIT' | CROSSOVER = 'CROSSOVER' | SHRINK_MUTATION = 'SHRINK_MUTATION' | REPACE_MUTATION = 'REPACE_MUTATION' | PARTIAL_HYPER_MUTATION = 'PARTIAL_HYPER_MUTATION' | DUPLICATION = 'DUPLICATION';

enum KernelType returns KernelType:
				PRECOMPUTED = 'PRECOMPUTED' | LINEAR = 'LINEAR' | POLY = 'POLY' | RBF = 'RBF' | SIGMOID = 'SIGMOID';

enum SolverType returns SolverType:
				ADAM = 'ADAM' | LBFGS = 'LBFGS' | SGD = 'SGD';

EFloat returns ecore::EFloat:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

enum ActivationType returns ActivationType:
				RELU = 'RELU' | SIGMOID = 'SIGMOID' | TANH = 'TANH';

enum FeedbackLibType returns FeedbackLibType:
				LIGHTFM = 'LIGHTFM' | LIGHTGBM = 'LIGHTGBM';

ImplicitFeedback returns ImplicitFeedback:
	{ImplicitFeedback}
	'ImplicitFeedback'
	'{'
		('item' item=RecommendedItem)?
	'}';

HybridFeedback returns HybridFeedback:
	{HybridFeedback}
	'HybridFeedback'
	'{'
		('item' item=RecommendedItem)?
	'}';

AdditiveFeedback returns AdditiveFeedback:
	{AdditiveFeedback}
	'AdditiveFeedback'
	'{'
		('numOfInsertion' numOfInsertion=EInt)?
		('recommender' recommender=[RecommendationSystem|EString])?
		('item' item=RecommendedItem)?
	'}';

Rating returns Rating:
	{Rating}
	'Rating'
	'{'
		('type' type=RatingType)?
		('item' item=RecommendedItem)?
	'}';

enum RatingType returns RatingType:
				POSITIVE = 'POSITIVE' | NEGATIVE = 'NEGATIVE' | NUMERICAL = 'NUMERICAL' | ORDINAL = 'ORDINAL' | UNARY = 'UNARY';
				
				

	