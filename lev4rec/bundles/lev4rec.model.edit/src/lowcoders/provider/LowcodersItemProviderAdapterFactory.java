/**
 */
package lowcoders.provider;

import java.util.ArrayList;
import java.util.Collection;

import lowcoders.util.LowcodersAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class LowcodersItemProviderAdapterFactory extends LowcodersAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public LowcodersItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.NamedElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NamedElementItemProvider namedElementItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.NamedElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNamedElementAdapter() {
		if (namedElementItemProvider == null) {
			namedElementItemProvider = new NamedElementItemProvider(this);
		}

		return namedElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.UserEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UserEventItemProvider userEventItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.UserEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUserEventAdapter() {
		if (userEventItemProvider == null) {
			userEventItemProvider = new UserEventItemProvider(this);
		}

		return userEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.RSModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RSModelItemProvider rsModelItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.RSModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRSModelAdapter() {
		if (rsModelItemProvider == null) {
			rsModelItemProvider = new RSModelItemProvider(this);
		}

		return rsModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.RecommendationHandler} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RecommendationHandlerItemProvider recommendationHandlerItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.RecommendationHandler}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRecommendationHandlerAdapter() {
		if (recommendationHandlerItemProvider == null) {
			recommendationHandlerItemProvider = new RecommendationHandlerItemProvider(this);
		}

		return recommendationHandlerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.ProactiveHandler} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProactiveHandlerItemProvider proactiveHandlerItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.ProactiveHandler}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProactiveHandlerAdapter() {
		if (proactiveHandlerItemProvider == null) {
			proactiveHandlerItemProvider = new ProactiveHandlerItemProvider(this);
		}

		return proactiveHandlerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.ReactiveHandler} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReactiveHandlerItemProvider reactiveHandlerItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.ReactiveHandler}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReactiveHandlerAdapter() {
		if (reactiveHandlerItemProvider == null) {
			reactiveHandlerItemProvider = new ReactiveHandlerItemProvider(this);
		}

		return reactiveHandlerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.RecommendationUsage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RecommendationUsageItemProvider recommendationUsageItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.RecommendationUsage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRecommendationUsageAdapter() {
		if (recommendationUsageItemProvider == null) {
			recommendationUsageItemProvider = new RecommendationUsageItemProvider(this);
		}

		return recommendationUsageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.WebIService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WebIServiceItemProvider webIServiceItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.WebIService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWebIServiceAdapter() {
		if (webIServiceItemProvider == null) {
			webIServiceItemProvider = new WebIServiceItemProvider(this);
		}

		return webIServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.WebApplication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WebApplicationItemProvider webApplicationItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.WebApplication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWebApplicationAdapter() {
		if (webApplicationItemProvider == null) {
			webApplicationItemProvider = new WebApplicationItemProvider(this);
		}

		return webApplicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.IDEIntegration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IDEIntegrationItemProvider ideIntegrationItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.IDEIntegration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIDEIntegrationAdapter() {
		if (ideIntegrationItemProvider == null) {
			ideIntegrationItemProvider = new IDEIntegrationItemProvider(this);
		}

		return ideIntegrationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.VSCodePlugin} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VSCodePluginItemProvider vsCodePluginItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.VSCodePlugin}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVSCodePluginAdapter() {
		if (vsCodePluginItemProvider == null) {
			vsCodePluginItemProvider = new VSCodePluginItemProvider(this);
		}

		return vsCodePluginItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.TraversableGraph} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TraversableGraphItemProvider traversableGraphItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.TraversableGraph}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTraversableGraphAdapter() {
		if (traversableGraphItemProvider == null) {
			traversableGraphItemProvider = new TraversableGraphItemProvider(this);
		}

		return traversableGraphItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.Evaluation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvaluationItemProvider evaluationItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.Evaluation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvaluationAdapter() {
		if (evaluationItemProvider == null) {
			evaluationItemProvider = new EvaluationItemProvider(this);
		}

		return evaluationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.UnsupervisedDataset} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnsupervisedDatasetItemProvider unsupervisedDatasetItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.UnsupervisedDataset}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnsupervisedDatasetAdapter() {
		if (unsupervisedDatasetItemProvider == null) {
			unsupervisedDatasetItemProvider = new UnsupervisedDatasetItemProvider(this);
		}

		return unsupervisedDatasetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.SupervisedDataset} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SupervisedDatasetItemProvider supervisedDatasetItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.SupervisedDataset}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSupervisedDatasetAdapter() {
		if (supervisedDatasetItemProvider == null) {
			supervisedDatasetItemProvider = new SupervisedDatasetItemProvider(this);
		}

		return supervisedDatasetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.Variable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableItemProvider variableItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.Variable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableAdapter() {
		if (variableItemProvider == null) {
			variableItemProvider = new VariableItemProvider(this);
		}

		return variableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.Preprocessing} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PreprocessingItemProvider preprocessingItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.Preprocessing}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPreprocessingAdapter() {
		if (preprocessingItemProvider == null) {
			preprocessingItemProvider = new PreprocessingItemProvider(this);
		}

		return preprocessingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.CodeRepository} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CodeRepositoryItemProvider codeRepositoryItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.CodeRepository}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCodeRepositoryAdapter() {
		if (codeRepositoryItemProvider == null) {
			codeRepositoryItemProvider = new CodeRepositoryItemProvider(this);
		}

		return codeRepositoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.CommunicationChannel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommunicationChannelItemProvider communicationChannelItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.CommunicationChannel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommunicationChannelAdapter() {
		if (communicationChannelItemProvider == null) {
			communicationChannelItemProvider = new CommunicationChannelItemProvider(this);
		}

		return communicationChannelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.BugTrackingSystem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BugTrackingSystemItemProvider bugTrackingSystemItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.BugTrackingSystem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBugTrackingSystemAdapter() {
		if (bugTrackingSystemItemProvider == null) {
			bugTrackingSystemItemProvider = new BugTrackingSystemItemProvider(this);
		}

		return bugTrackingSystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.Graph} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GraphItemProvider graphItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.Graph}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGraphAdapter() {
		if (graphItemProvider == null) {
			graphItemProvider = new GraphItemProvider(this);
		}

		return graphItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.Matrix} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MatrixItemProvider matrixItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.Matrix}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMatrixAdapter() {
		if (matrixItemProvider == null) {
			matrixItemProvider = new MatrixItemProvider(this);
		}

		return matrixItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.Tree} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TreeItemProvider treeItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.Tree}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTreeAdapter() {
		if (treeItemProvider == null) {
			treeItemProvider = new TreeItemProvider(this);
		}

		return treeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.TextualContent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TextualContentItemProvider textualContentItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.TextualContent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTextualContentAdapter() {
		if (textualContentItemProvider == null) {
			textualContentItemProvider = new TextualContentItemProvider(this);
		}

		return textualContentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.ARFF} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ARFFItemProvider arffItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.ARFF}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createARFFAdapter() {
		if (arffItemProvider == null) {
			arffItemProvider = new ARFFItemProvider(this);
		}

		return arffItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.MachineLearningBasedRS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MachineLearningBasedRSItemProvider machineLearningBasedRSItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.MachineLearningBasedRS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMachineLearningBasedRSAdapter() {
		if (machineLearningBasedRSItemProvider == null) {
			machineLearningBasedRSItemProvider = new MachineLearningBasedRSItemProvider(this);
		}

		return machineLearningBasedRSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.FilteringRS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilteringRSItemProvider filteringRSItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.FilteringRS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilteringRSAdapter() {
		if (filteringRSItemProvider == null) {
			filteringRSItemProvider = new FilteringRSItemProvider(this);
		}

		return filteringRSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.DataMiningRS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataMiningRSItemProvider dataMiningRSItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.DataMiningRS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataMiningRSAdapter() {
		if (dataMiningRSItemProvider == null) {
			dataMiningRSItemProvider = new DataMiningRSItemProvider(this);
		}

		return dataMiningRSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.CustomRecommender} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomRecommenderItemProvider customRecommenderItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.CustomRecommender}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomRecommenderAdapter() {
		if (customRecommenderItemProvider == null) {
			customRecommenderItemProvider = new CustomRecommenderItemProvider(this);
		}

		return customRecommenderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.RecommendationSetting} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RecommendationSettingItemProvider recommendationSettingItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.RecommendationSetting}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRecommendationSettingAdapter() {
		if (recommendationSettingItemProvider == null) {
			recommendationSettingItemProvider = new RecommendationSettingItemProvider(this);
		}

		return recommendationSettingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.GeneticAlgorithm} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeneticAlgorithmItemProvider geneticAlgorithmItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.GeneticAlgorithm}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeneticAlgorithmAdapter() {
		if (geneticAlgorithmItemProvider == null) {
			geneticAlgorithmItemProvider = new GeneticAlgorithmItemProvider(this);
		}

		return geneticAlgorithmItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.UserStudy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UserStudyItemProvider userStudyItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.UserStudy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUserStudyAdapter() {
		if (userStudyItemProvider == null) {
			userStudyItemProvider = new UserStudyItemProvider(this);
		}

		return userStudyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.CrossValidation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CrossValidationItemProvider crossValidationItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.CrossValidation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCrossValidationAdapter() {
		if (crossValidationItemProvider == null) {
			crossValidationItemProvider = new CrossValidationItemProvider(this);
		}

		return crossValidationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.RecommendationContext} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RecommendationContextItemProvider recommendationContextItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.RecommendationContext}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRecommendationContextAdapter() {
		if (recommendationContextItemProvider == null) {
			recommendationContextItemProvider = new RecommendationContextItemProvider(this);
		}

		return recommendationContextItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.DependencyManager} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DependencyManagerItemProvider dependencyManagerItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.DependencyManager}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDependencyManagerAdapter() {
		if (dependencyManagerItemProvider == null) {
			dependencyManagerItemProvider = new DependencyManagerItemProvider(this);
		}

		return dependencyManagerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.VariableRelation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableRelationItemProvider variableRelationItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.VariableRelation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableRelationAdapter() {
		if (variableRelationItemProvider == null) {
			variableRelationItemProvider = new VariableRelationItemProvider(this);
		}

		return variableRelationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.GroundTruthExtraction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroundTruthExtractionItemProvider groundTruthExtractionItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.GroundTruthExtraction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroundTruthExtractionAdapter() {
		if (groundTruthExtractionItemProvider == null) {
			groundTruthExtractionItemProvider = new GroundTruthExtractionItemProvider(this);
		}

		return groundTruthExtractionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.File} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FileItemProvider fileItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.File}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFileAdapter() {
		if (fileItemProvider == null) {
			fileItemProvider = new FileItemProvider(this);
		}

		return fileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.RecommendedItem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RecommendedItemItemProvider recommendedItemItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.RecommendedItem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRecommendedItemAdapter() {
		if (recommendedItemItemProvider == null) {
			recommendedItemItemProvider = new RecommendedItemItemProvider(this);
		}

		return recommendedItemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.ContextValidation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContextValidationItemProvider contextValidationItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.ContextValidation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContextValidationAdapter() {
		if (contextValidationItemProvider == null) {
			contextValidationItemProvider = new ContextValidationItemProvider(this);
		}

		return contextValidationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.RawOutcomes} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RawOutcomesItemProvider rawOutcomesItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.RawOutcomes}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRawOutcomesAdapter() {
		if (rawOutcomesItemProvider == null) {
			rawOutcomesItemProvider = new RawOutcomesItemProvider(this);
		}

		return rawOutcomesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.RandomSplitting} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RandomSplittingItemProvider randomSplittingItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.RandomSplitting}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRandomSplittingAdapter() {
		if (randomSplittingItemProvider == null) {
			randomSplittingItemProvider = new RandomSplittingItemProvider(this);
		}

		return randomSplittingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.AutomatedValidation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AutomatedValidationItemProvider automatedValidationItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.AutomatedValidation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAutomatedValidationAdapter() {
		if (automatedValidationItemProvider == null) {
			automatedValidationItemProvider = new AutomatedValidationItemProvider(this);
		}

		return automatedValidationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.DeepNN} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeepNNItemProvider deepNNItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.DeepNN}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeepNNAdapter() {
		if (deepNNItemProvider == null) {
			deepNNItemProvider = new DeepNNItemProvider(this);
		}

		return deepNNItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.ConvolutionalNN} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConvolutionalNNItemProvider convolutionalNNItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.ConvolutionalNN}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConvolutionalNNAdapter() {
		if (convolutionalNNItemProvider == null) {
			convolutionalNNItemProvider = new ConvolutionalNNItemProvider(this);
		}

		return convolutionalNNItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.Bayesian} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BayesianItemProvider bayesianItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.Bayesian}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBayesianAdapter() {
		if (bayesianItemProvider == null) {
			bayesianItemProvider = new BayesianItemProvider(this);
		}

		return bayesianItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.RecurrentNN} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RecurrentNNItemProvider recurrentNNItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.RecurrentNN}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRecurrentNNAdapter() {
		if (recurrentNNItemProvider == null) {
			recurrentNNItemProvider = new RecurrentNNItemProvider(this);
		}

		return recurrentNNItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.SVM} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SVMItemProvider svmItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.SVM}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSVMAdapter() {
		if (svmItemProvider == null) {
			svmItemProvider = new SVMItemProvider(this);
		}

		return svmItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.DecisionTree} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DecisionTreeItemProvider decisionTreeItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.DecisionTree}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDecisionTreeAdapter() {
		if (decisionTreeItemProvider == null) {
			decisionTreeItemProvider = new DecisionTreeItemProvider(this);
		}

		return decisionTreeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.FeedForwardNN} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeedForwardNNItemProvider feedForwardNNItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.FeedForwardNN}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeedForwardNNAdapter() {
		if (feedForwardNNItemProvider == null) {
			feedForwardNNItemProvider = new FeedForwardNNItemProvider(this);
		}

		return feedForwardNNItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.GUIElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GUIElementItemProvider guiElementItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.GUIElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGUIElementAdapter() {
		if (guiElementItemProvider == null) {
			guiElementItemProvider = new GUIElementItemProvider(this);
		}

		return guiElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.User} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UserItemProvider userItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.User}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUserAdapter() {
		if (userItemProvider == null) {
			userItemProvider = new UserItemProvider(this);
		}

		return userItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.FeedbackComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeedbackComponentItemProvider feedbackComponentItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.FeedbackComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeedbackComponentAdapter() {
		if (feedbackComponentItemProvider == null) {
			feedbackComponentItemProvider = new FeedbackComponentItemProvider(this);
		}

		return feedbackComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.ImplicitFeedback} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplicitFeedbackItemProvider implicitFeedbackItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.ImplicitFeedback}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplicitFeedbackAdapter() {
		if (implicitFeedbackItemProvider == null) {
			implicitFeedbackItemProvider = new ImplicitFeedbackItemProvider(this);
		}

		return implicitFeedbackItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.HybridFeedback} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HybridFeedbackItemProvider hybridFeedbackItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.HybridFeedback}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHybridFeedbackAdapter() {
		if (hybridFeedbackItemProvider == null) {
			hybridFeedbackItemProvider = new HybridFeedbackItemProvider(this);
		}

		return hybridFeedbackItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.AdditiveFeedback} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdditiveFeedbackItemProvider additiveFeedbackItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.AdditiveFeedback}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdditiveFeedbackAdapter() {
		if (additiveFeedbackItemProvider == null) {
			additiveFeedbackItemProvider = new AdditiveFeedbackItemProvider(this);
		}

		return additiveFeedbackItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lowcoders.Rating} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RatingItemProvider ratingItemProvider;

	/**
	 * This creates an adapter for a {@link lowcoders.Rating}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRatingAdapter() {
		if (ratingItemProvider == null) {
			ratingItemProvider = new RatingItemProvider(this);
		}

		return ratingItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (namedElementItemProvider != null) namedElementItemProvider.dispose();
		if (userEventItemProvider != null) userEventItemProvider.dispose();
		if (rsModelItemProvider != null) rsModelItemProvider.dispose();
		if (recommendationHandlerItemProvider != null) recommendationHandlerItemProvider.dispose();
		if (proactiveHandlerItemProvider != null) proactiveHandlerItemProvider.dispose();
		if (reactiveHandlerItemProvider != null) reactiveHandlerItemProvider.dispose();
		if (recommendationUsageItemProvider != null) recommendationUsageItemProvider.dispose();
		if (webIServiceItemProvider != null) webIServiceItemProvider.dispose();
		if (webApplicationItemProvider != null) webApplicationItemProvider.dispose();
		if (ideIntegrationItemProvider != null) ideIntegrationItemProvider.dispose();
		if (vsCodePluginItemProvider != null) vsCodePluginItemProvider.dispose();
		if (traversableGraphItemProvider != null) traversableGraphItemProvider.dispose();
		if (evaluationItemProvider != null) evaluationItemProvider.dispose();
		if (unsupervisedDatasetItemProvider != null) unsupervisedDatasetItemProvider.dispose();
		if (supervisedDatasetItemProvider != null) supervisedDatasetItemProvider.dispose();
		if (variableItemProvider != null) variableItemProvider.dispose();
		if (preprocessingItemProvider != null) preprocessingItemProvider.dispose();
		if (codeRepositoryItemProvider != null) codeRepositoryItemProvider.dispose();
		if (communicationChannelItemProvider != null) communicationChannelItemProvider.dispose();
		if (bugTrackingSystemItemProvider != null) bugTrackingSystemItemProvider.dispose();
		if (graphItemProvider != null) graphItemProvider.dispose();
		if (matrixItemProvider != null) matrixItemProvider.dispose();
		if (treeItemProvider != null) treeItemProvider.dispose();
		if (textualContentItemProvider != null) textualContentItemProvider.dispose();
		if (arffItemProvider != null) arffItemProvider.dispose();
		if (machineLearningBasedRSItemProvider != null) machineLearningBasedRSItemProvider.dispose();
		if (filteringRSItemProvider != null) filteringRSItemProvider.dispose();
		if (dataMiningRSItemProvider != null) dataMiningRSItemProvider.dispose();
		if (customRecommenderItemProvider != null) customRecommenderItemProvider.dispose();
		if (recommendationSettingItemProvider != null) recommendationSettingItemProvider.dispose();
		if (geneticAlgorithmItemProvider != null) geneticAlgorithmItemProvider.dispose();
		if (userStudyItemProvider != null) userStudyItemProvider.dispose();
		if (crossValidationItemProvider != null) crossValidationItemProvider.dispose();
		if (recommendationContextItemProvider != null) recommendationContextItemProvider.dispose();
		if (dependencyManagerItemProvider != null) dependencyManagerItemProvider.dispose();
		if (variableRelationItemProvider != null) variableRelationItemProvider.dispose();
		if (groundTruthExtractionItemProvider != null) groundTruthExtractionItemProvider.dispose();
		if (fileItemProvider != null) fileItemProvider.dispose();
		if (recommendedItemItemProvider != null) recommendedItemItemProvider.dispose();
		if (contextValidationItemProvider != null) contextValidationItemProvider.dispose();
		if (rawOutcomesItemProvider != null) rawOutcomesItemProvider.dispose();
		if (randomSplittingItemProvider != null) randomSplittingItemProvider.dispose();
		if (automatedValidationItemProvider != null) automatedValidationItemProvider.dispose();
		if (deepNNItemProvider != null) deepNNItemProvider.dispose();
		if (convolutionalNNItemProvider != null) convolutionalNNItemProvider.dispose();
		if (bayesianItemProvider != null) bayesianItemProvider.dispose();
		if (recurrentNNItemProvider != null) recurrentNNItemProvider.dispose();
		if (svmItemProvider != null) svmItemProvider.dispose();
		if (decisionTreeItemProvider != null) decisionTreeItemProvider.dispose();
		if (feedForwardNNItemProvider != null) feedForwardNNItemProvider.dispose();
		if (guiElementItemProvider != null) guiElementItemProvider.dispose();
		if (userItemProvider != null) userItemProvider.dispose();
		if (feedbackComponentItemProvider != null) feedbackComponentItemProvider.dispose();
		if (implicitFeedbackItemProvider != null) implicitFeedbackItemProvider.dispose();
		if (hybridFeedbackItemProvider != null) hybridFeedbackItemProvider.dispose();
		if (additiveFeedbackItemProvider != null) additiveFeedbackItemProvider.dispose();
		if (ratingItemProvider != null) ratingItemProvider.dispose();
	}

}
